{"version":3,"sources":["../../src/Modal/Modal.js"],"names":["Modal","props","modalRef","React","createRef","expand","bind","desktopButtons","mobileButtons","renderPopover","state","currentStatus","SWF_MODAL","MODAL_SIZE","DEFAULT","modalOpened","mobileFooterOpened","isFullSize","FULL","modalNode","current","querySelector","removeAttribute","setState","setAttribute","showPopover","popoverContent","tagline","content","actions","_closeModal","display","headerElements","isMobile","MOBILE_REGEXP","test","navigator","userAgent","styles","elm","Component","defaultProps","openModal","propTypes","PropTypes","bool","shape","object","oneOf","number"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport {SWF_MODAL} from \"./constants\";\r\nimport styles from \"./styles.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../Button/Button\";\r\n\r\nclass Modal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.modalRef = React.createRef();\r\n        this.expand = this.expand.bind(this);\r\n        this.desktopButtons = this.desktopButtons.bind(this);\r\n        this.mobileButtons = this.mobileButtons.bind(this);\r\n        this.renderPopover = this.renderPopover.bind(this);\r\n\r\n        this.state = {\r\n            currentStatus: SWF_MODAL.MODAL_SIZE.DEFAULT,\r\n            modalOpened: false,\r\n            mobileFooterOpened: false\r\n        }\r\n    }\r\n\r\n    expand() {\r\n        const isFullSize = this.state.currentStatus === SWF_MODAL.MODAL_SIZE.FULL;\r\n\r\n        const modalNode = this.modalRef.current\r\n            .querySelector(\".modal-dialog\");\r\n\r\n        if (isFullSize) {\r\n            modalNode.removeAttribute(\"style\");\r\n            this.setState({currentStatus: SWF_MODAL.MODAL_SIZE.DEFAULT});\r\n            return;\r\n        }\r\n\r\n        modalNode.setAttribute(\"style\", \"width: 100%; height: 98%;\");\r\n        this.setState({currentStatus: SWF_MODAL.MODAL_SIZE.FULL});\r\n    }\r\n\r\n    renderPopover() {\r\n        const {showPopover, popoverContent: {tagline, content, actions}} = this.props;\r\n\r\n        if (showPopover) {\r\n            return (\r\n                <now-popover\r\n                    positions={[\r\n                        {\r\n                            \"target\": \"bottom-end\",\r\n                            \"content\": \"top-end\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <now-button-iconic icon=\"close-fill\"\r\n                                       variant=\"tertiary\"\r\n                                       bare={true}\r\n                                       size=\"md\"\r\n                                       slot=\"trigger\"\r\n                                       configAria={{\"button\": {\"aria-label\": \"Close\"}}}\r\n                                       tooltipContent=\"Close\"\r\n                    />\r\n                    <now-template-card-omnichannel\r\n                        slot=\"content\"\r\n                        tagline={tagline}\r\n                        content={content}\r\n                        actions={actions}\r\n                    />\r\n                </now-popover>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <now-button-iconic icon=\"close-fill\"\r\n                               variant=\"tertiary\"\r\n                               bare={true}\r\n                               size=\"md\"\r\n                               slot=\"trigger\"\r\n                               configAria={{\"button\": {\"aria-label\": \"Close\"}}}\r\n                               tooltipContent=\"Close\"\r\n                               on-click={_closeModal}\r\n            />\r\n        )\r\n    }\r\n\r\n    desktopButtons() {\r\n        const isFullSize = this.state.currentStatus === SWF_MODAL.MODAL_SIZE.FULL;\r\n\r\n        return (\r\n            <>\r\n                <Button icon=\"arrows-angle-expand\"\r\n                        variant=\"tertiary\"\r\n                        bare={true}\r\n                        size=\"md\"\r\n                        configAria={{\"button\": {\"aria-label\": \"Collapse\"}}}\r\n                        tooltipContent=\"Collapse\"\r\n                        onClick={() => this.setState({modalOpened: true})}\r\n                />\r\n                <Button icon={isFullSize ? \"collapse-fill\" : \"arrows-angle-expand\"}\r\n                                   variant=\"tertiary\"\r\n                                   bare={true}\r\n                                   size=\"md\"\r\n                                   configAria={{\"button\": {\"aria-label\": \"Expand\"}}}\r\n                                   tooltipContent={isFullSize ? \"Collapse\" : \"Expand\"}\r\n                                   onClick={() => this.setState({currentStatus: SWF_MODAL.MODAL_SIZE.FULL})}\r\n                />\r\n                {this.renderPopover()}\r\n            </>\r\n        )\r\n    }\r\n\r\n    mobileButtons() {\r\n        return (\r\n            <>\r\n                <now-button-iconic\r\n                    icon=\"arrow-left-fill\"\r\n                    variant=\"tertiary\"\r\n                    bare={true}\r\n                    size=\"lg\"\r\n                    configAria={{\"button\": {\"aria-label\": \"Back\"}}}\r\n                    tooltipContent=\"Back\"\r\n                    onClick={() => this.setState({modalOpened: false})}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {display, headerElements} = this.props;\r\n        const {mobileFooterOpened} = this.state;\r\n\r\n        const isMobile = SWF_MODAL.MOBILE_REGEXP.test(navigator.userAgent);\r\n\r\n        return (<>\r\n                <style type=\"text/css\">{styles}</style>\r\n                <div className=\"modal-overlay\"\r\n                     ref={elm => this.modalRef.current = elm}\r\n                >\r\n                    <div className=\"modal\">\r\n                        <div className={classnames({\r\n                            \"modal-dialog\": true,\r\n                            [`--${display}`]: true,\r\n                            [`--full`]: isMobile\r\n                        })}>\r\n                            <div className={classnames({\r\n                                \"modal-header\": true,\r\n                                \"--mobile\": isMobile,\r\n                                \"--desktop-content\": !isMobile && headerElements === 2,\r\n                                \"--desktop\": !isMobile && headerElements === 3\r\n                            })}>\r\n                                <div className=\"main-buttons\">\r\n                                    {isMobile ? this.mobileButtons() : this.desktopButtons()}\r\n                                </div>\r\n                                <div className=\"header-content\">\r\n                                    <slot name=\"header\"/>\r\n                                </div>\r\n                                {\r\n                                    headerElements === 3 ? <div className=\"additional-buttons\">\r\n                                        {isMobile ?\r\n                                            <now-button-iconic\r\n                                                icon=\"ellipsis-h-fill\"\r\n                                                variant=\"primary\"\r\n                                                bare={true}\r\n                                                size=\"md\"\r\n                                                configAria={{\"button\": {\"aria-label\": \"Show Actions\"}}}\r\n                                                tooltipContent=\"Show Actions\"\r\n                                                onClick={() => this.setState({mobileFooterOpened: true})}\r\n                                            />\r\n                                            :\r\n                                            <slot name=\"header-buttons\"/>}\r\n                                    </div> : \"\"\r\n                                }\r\n\r\n                            </div>\r\n                            <div\r\n                                className=\"modal-body\"\r\n                            >\r\n                                <slot name=\"body\"/>\r\n                            </div>\r\n                            {isMobile\r\n                                ?\r\n                                <div\r\n                                    className={classnames({\r\n                                        \"menu-background\": true,\r\n                                        \"--active\": mobileFooterOpened\r\n                                    })}\r\n                                />\r\n                                :\r\n                                \"\"}\r\n                            <div className={classnames({\r\n                                \"modal-footer\": true,\r\n                                \"--mobile\": isMobile,\r\n                                \"--active\": mobileFooterOpened\r\n                            })}>\r\n                                {isMobile ?\r\n                                    <div className=\"footer-content\">\r\n                                        <slot name=\"footer\"/>\r\n                                        <slot name=\"header-buttons\"/>\r\n                                    </div>\r\n                                    :\r\n                                    <slot name=\"footer\"/>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nModal.defaultProps = {\r\n    openModal: false,\r\n    showPopover: false,\r\n    popoverContent: {},\r\n    display: \"grid\",\r\n    headerElements: 2\r\n}\r\n\r\nModal.propTypes = {\r\n    openModal: PropTypes.bool,\r\n    showPopover: PropTypes.bool,\r\n    popoverContent: PropTypes.shape({\r\n        tagline: PropTypes.object,\r\n        content: PropTypes.object,\r\n        actions: PropTypes.object\r\n    }),\r\n    display: PropTypes.oneOf([\r\n        'block',\r\n        'inline',\r\n        'inline-block',\r\n        'grid',\r\n        'flex',\r\n        'inline-grid',\r\n        'inline-flex',\r\n        'none'\r\n    ]),\r\n    headerElements: PropTypes.number\r\n}\r\n\r\nexport default Modal"],"file":"Modal.js"}