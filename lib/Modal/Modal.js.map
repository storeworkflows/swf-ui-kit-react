{"version":3,"sources":["../../src/Modal/Modal.js"],"names":["Modal","props","modalRef","React","createRef","expand","bind","desktopButtons","mobileButtons","renderPopover","state","currentStatus","SWF_MODAL","MODAL_SIZE","DEFAULT","openModal","mobileFooterOpened","isFullSize","FULL","modalNode","current","querySelector","removeAttribute","setState","setAttribute","showPopover","popoverContent","tagline","content","actions","status","modalOpened","addEventListener","event","display","headerElements","isMobile","MOBILE_REGEXP","test","navigator","userAgent","styles","elm","children","Component","Header","HeaderButtons","Body","Footer","defaultProps","propTypes","PropTypes","bool","shape","object","oneOf","number"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport classnames from \"classnames\";\nimport {SWF_MODAL} from \"./constants\";\nimport styles from \"./styles.scss\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Button/Button\";\nimport findByType, {createSubComponent} from \"../utils/findByType\";\n\nclass Modal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.modalRef = React.createRef();\n        this.expand = this.expand.bind(this);\n        this.desktopButtons = this.desktopButtons.bind(this);\n        this.mobileButtons = this.mobileButtons.bind(this);\n        this.renderPopover = this.renderPopover.bind(this);\n\n        this.state = {\n            currentStatus: SWF_MODAL.MODAL_SIZE.DEFAULT,\n            openModal: this.props.openModal,\n            mobileFooterOpened: false\n        }\n    }\n\n    expand() {\n        const isFullSize = this.state.currentStatus === SWF_MODAL.MODAL_SIZE.FULL;\n\n        const modalNode = this.modalRef.current\n            .querySelector(\".modal-dialog\");\n\n        if (isFullSize) {\n            modalNode.removeAttribute(\"style\");\n            this.setState({currentStatus: SWF_MODAL.MODAL_SIZE.DEFAULT});\n            return;\n        }\n\n        modalNode.setAttribute(\"style\", \"width: 100%; height: 98%;\");\n        this.setState({currentStatus: SWF_MODAL.MODAL_SIZE.FULL});\n    }\n\n    renderPopover() {\n        const {showPopover, popoverContent: {tagline, content, actions}} = this.props;\n\n        if (showPopover) {\n            return (\n                <now-popover\n                    positions={[\n                        {\n                            \"target\": \"bottom-end\",\n                            \"content\": \"top-end\"\n                        }\n                    ]}\n                >\n                    <Button icon=\"x\"\n                            variant=\"tertiary\"\n                            bare={true}\n                            size=\"md\"\n                            slot=\"trigger\"\n                            configAria={{\"button\": {\"aria-label\": \"Close\"}}}\n                            tooltipContent=\"Close\"\n                    />\n                    <now-template-card-omnichannel\n                        slot=\"content\"\n                        tagline={tagline}\n                        content={content}\n                        actions={actions}\n                    />\n                </now-popover>\n            )\n        }\n\n        return (\n            <Button icon=\"x\"\n                    variant=\"tertiary\"\n                    bare={true}\n                    size=\"md\"\n                    slot=\"trigger\"\n                    configAria={{\"button\": {\"aria-label\": \"Close\"}}}\n                    tooltipContent=\"Close\"\n                    onClick={() => this.setState({openModal: false})}\n            />\n        )\n    }\n\n    desktopButtons() {\n        const isFullSize = this.state.currentStatus === SWF_MODAL.MODAL_SIZE.FULL;\n        const status = isFullSize ? SWF_MODAL.MODAL_SIZE.DEFAULT : SWF_MODAL.MODAL_SIZE.FULL;\n\n        return (\n            <>\n                <Button icon=\"dash\"\n                        variant=\"tertiary\"\n                        bare={true}\n                        size=\"md\"\n                        configAria={{\"button\": {\"aria-label\": \"Collapse\"}}}\n                        tooltipContent=\"Collapse\"\n                        onClick={() => this.setState({modalOpened: true})}\n                />\n                <Button icon={isFullSize ? \"arrows-angle-contract\" : \"arrows-angle-expand\"}\n                        variant=\"tertiary\"\n                        bare={true}\n                        size=\"md\"\n                        configAria={{\"button\": {\"aria-label\": \"Expand\"}}}\n                        tooltipContent={isFullSize ? \"Collapse\" : \"Expand\"}\n                        onClick={() => this.setState({currentStatus: status})}\n                />\n                {this.renderPopover()}\n            </>\n        )\n    }\n\n    mobileButtons() {\n        return (\n            <>\n                <Button\n                    icon=\"arrow-left\"\n                    variant=\"tertiary\"\n                    bare={true}\n                    size=\"md\"\n                    configAria={{\"button\": {\"aria-label\": \"Back\"}}}\n                    tooltipContent=\"Back\"\n                    onClick={() => this.setState({modalOpened: false})}\n                />\n                <Button\n                    icon=\"three-dots\"\n                    variant=\"tertiary\"\n                    bare={true}\n                    size=\"md\"\n                    configAria={{\"button\": {\"aria-label\": \"Show Actions\"}}}\n                    tooltipContent=\"Show Actions\"\n                    onClick={() => this.setState({mobileFooterOpened: true})}\n                />\n            </>\n        )\n    }\n\n    componentDidMount() {\n        this.modalRef.current.addEventListener(\"click\", (event) => {\n            if (this.state.mobileFooterOpened) {\n                this.setState({mobileFooterOpened: false})\n            }\n        })\n    }\n\n    render() {\n        const {display, headerElements} = this.props;\n        const {mobileFooterOpened, currentStatus} = this.state;\n        const isFullSize = currentStatus === SWF_MODAL.MODAL_SIZE.FULL;\n\n        const isMobile = SWF_MODAL.MOBILE_REGEXP.test(navigator.userAgent);\n\n        return (<>\n                <style type=\"text/css\">{styles}</style>\n                <div className=\"modal-overlay\"\n                     ref={elm => this.modalRef.current = elm}\n                >\n                    <div className=\"modal\">\n                        <div className={classnames({\n                            \"modal-dialog\": true,\n                            [`--${display}`]: true,\n                            [`--full-${isMobile ? \"mobile\" : \"desktop\"}`]: isMobile || isFullSize\n                        })}>\n                            <div className={classnames({\n                                \"modal-header\": true,\n                                \"--mobile\": isMobile,\n                                \"--desktop-content\": !isMobile && headerElements === 2,\n                                \"--desktop\": !isMobile && headerElements === 3\n                            })}>\n                                <div className=\"main-buttons\">\n                                    {isMobile ? this.mobileButtons() : this.desktopButtons()}\n                                </div>\n                                <div className=\"header-content\">\n                                    {findByType(this.props.children, \"Header\")}\n                                </div>\n                                {\n                                    headerElements === 3 ? <div className=\"additional-buttons\">\n                                        {!isMobile &&findByType(this.props.children, \"HeaderButtons\")}\n                                    </div> : \"\"\n                                }\n\n                            </div>\n                            <div\n                                className=\"modal-body\"\n                            >\n                                {findByType(this.props.children, \"Body\")}\n                            </div>\n                            {isMobile\n                                ?\n                                <div\n                                    className={classnames({\n                                        \"menu-background\": true,\n                                        \"--active\": mobileFooterOpened\n                                    })}\n                                />\n                                :\n                                \"\"}\n                            <div className={classnames({\n                                \"modal-footer\": true,\n                                \"--mobile\": isMobile,\n                                \"--active\": mobileFooterOpened\n                            })}>\n                                {isMobile ?\n                                    <div className=\"footer-content\">\n                                        {findByType(this.props.children, \"Footer\")}\n                                        {findByType(this.props.children, \"HeaderButtons\")}\n                                    </div>\n                                    :\n                                    findByType(this.props.children, \"Footer\")\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nModal.Header = createSubComponent(\"Header\");\nModal.HeaderButtons = createSubComponent(\"HeaderButtons\");\nModal.Body = createSubComponent(\"Body\");\nModal.Footer = createSubComponent(\"Footer\");\n\nModal.defaultProps = {\n    openModal: false,\n    showPopover: false,\n    popoverContent: {},\n    display: \"grid\",\n    headerElements: 2\n}\n\nModal.propTypes = {\n    openModal: PropTypes.bool,\n    showPopover: PropTypes.bool,\n    popoverContent: PropTypes.shape({\n        tagline: PropTypes.object,\n        content: PropTypes.object,\n        actions: PropTypes.object\n    }),\n    display: PropTypes.oneOf([\n        'block',\n        'inline',\n        'inline-block',\n        'grid',\n        'flex',\n        'inline-grid',\n        'inline-flex',\n        'none'\n    ]),\n    headerElements: PropTypes.number\n}\n\nexport default Modal"],"file":"Modal.js"}