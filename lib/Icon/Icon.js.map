{"version":3,"sources":["../../src/Icon/Icon.js"],"names":["Icon","props","color","size","customSize","style","finalSize","SIZE","height","width","icon","wrapper","document","createElement","innerHTML","icons","children","attrs","i","length","curProps","item","name","value","node","generateSvg","elm","innerRef","current","getAttrs","attributes","getStyles","React","Component","defaultProps","className","createRef","propTypes","string","isRequired","oneOf","number","object"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,I;;;;;;;;;;;;;WAEJ,qBAAW;AAAA,wBAKL,KAAKC,KALA;AAAA,UAEPC,KAFO,eAEPA,KAFO;AAAA,UAGPC,IAHO,eAGPA,IAHO;AAAA,UAIPC,UAJO,eAIPA,UAJO;AAOT,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,SAAS,GAAIF,UAAD,GAAeA,UAAf,GAA4BG,gBAAKJ,IAAL,CAA5C;AAEAE,MAAAA,KAAK,CAACG,MAAN,GAAeF,SAAf;AACAD,MAAAA,KAAK,CAACI,KAAN,GAAcH,SAAd;AAEA,UAAGJ,KAAH,EACEG,KAAK,CAACH,KAAN,GAAcA,KAAd;AAEF,aAAOG,KAAP;AACD;;;WAED,qBAAYK,IAAZ,EAAiB;AACf,UAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAhB;AACAF,MAAAA,OAAO,CAACG,SAAR,GAAoBC,kBAAML,IAAN,CAApB;AACA,aAAOC,OAAO,CAACK,QAAR,CAAiB,CAAjB,CAAP;AACD;;;WAED,kBAASC,KAAT,EAAe;AACb,UAAIhB,KAAK,GAAG,EAAZ;;AACA,WAAI,IAAIiB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,KAAK,CAACE,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AAC/B,YAAIE,QAAQ,GAAGH,KAAK,CAACI,IAAN,CAAWH,CAAX,CAAf;AACA,YAAII,IAAI,GAAGF,QAAQ,CAACE,IAAT,KAAkB,OAAlB,GAA4B,WAA5B,GAA0CF,QAAQ,CAACE,IAA9D;AACArB,QAAAA,KAAK,CAACqB,IAAD,CAAL,GAAcF,QAAQ,CAACG,KAAvB;AACD;;AACD,aAAOtB,KAAP;AACD;;;WAGD,kBAAU;AAAA;;AACR,UAAIuB,IAAI,GAAG,KAAKC,WAAL,CAAiB,KAAKxB,KAAL,CAAWS,IAA5B,CAAX;AAEA,0BACI;AACI,QAAA,GAAG,EAAE,aAAAgB,GAAG;AAAA,iBAAI,KAAI,CAACzB,KAAL,CAAW0B,QAAX,CAAoBC,OAApB,GAA8BF,GAAlC;AAAA;AADZ,SAEQ,KAAKG,QAAL,CAAcL,IAAI,CAACM,UAAnB,CAFR;AAGI,QAAA,KAAK,EAAE,KAAKC,SAAL,EAHX;AAAA,+BAIE,+CAAU,KAAKF,QAAL,CAAcL,IAAI,CAACR,QAAL,CAAc,CAAd,EAAiBc,UAA/B,CAAV;AAJF,SADJ;AAUD;;;;EAnDgBE,KAAK,CAACC,S;;AAsDzBjC,IAAI,CAACkC,YAAL,GAAoB;AAClBxB,EAAAA,IAAI,EAAE,EADY;AAElBP,EAAAA,IAAI,EAAE,IAFY;AAGlBD,EAAAA,KAAK,EAAE,EAHW;AAIlBiC,EAAAA,SAAS,EAAE,EAJO;AAKlBR,EAAAA,QAAQ,eAAEK,KAAK,CAACI,SAAN;AALQ,CAApB;AAQApC,IAAI,CAACqC,SAAL,GAAiB;AACf3B,EAAAA,IAAI,EAAE2B,sBAAUC,MAAV,CAAiBC,UADR;AAEfpC,EAAAA,IAAI,EAAEkC,sBAAUG,KAAV,CAAgB,CAAC,IAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,KAA9B,CAAhB,CAFS;AAGfpC,EAAAA,UAAU,EAAEiC,sBAAUI,MAHP;AAIfvC,EAAAA,KAAK,EAAEmC,sBAAUC,MAJF;AAKfH,EAAAA,SAAS,EAAEE,sBAAUC,MALN;AAMfX,EAAAA,QAAQ,EAAEU,sBAAUK;AANL,CAAjB;eAUe1C,I","sourcesContent":["import * as React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nimport icons from \"./icons\";\r\nimport {SIZE} from \"./constants\";\r\n\r\nclass Icon extends React.Component {\r\n\r\n  getStyles(){\r\n    const {\r\n      color,\r\n      size,\r\n      customSize\r\n    } = this.props;\r\n\r\n    let style = {}\r\n    let finalSize = (customSize) ? customSize : SIZE[size];\r\n\r\n    style.height = finalSize;\r\n    style.width = finalSize;\r\n\r\n    if(color)\r\n      style.color = color;\r\n\r\n    return style;\r\n  }\r\n\r\n  generateSvg(icon){\r\n    const wrapper = document.createElement(\"span\");\r\n    wrapper.innerHTML = icons[icon];\r\n    return wrapper.children[0];\r\n  }\r\n\r\n  getAttrs(attrs){\r\n    let props = {};\r\n    for(let i=0; i<attrs.length; i++){\r\n      let curProps = attrs.item(i);\r\n      let name = curProps.name === \"class\" ? \"className\" : curProps.name;\r\n      props[name] = curProps.value;\r\n    }\r\n    return props;\r\n  }\r\n\r\n\r\n  render () {\r\n    let node = this.generateSvg(this.props.icon);\r\n\r\n    return (\r\n        <svg\r\n            ref={elm => this.props.innerRef.current = elm}\r\n            {...this.getAttrs(node.attributes)}\r\n            style={this.getStyles()}>\r\n          <path {...this.getAttrs(node.children[0].attributes)} />\r\n        </svg>\r\n    )\r\n\r\n    ;\r\n  }\r\n}\r\n\r\nIcon.defaultProps = {\r\n  icon: \"\",\r\n  size: 'md',\r\n  color: \"\",\r\n  className: \"\",\r\n  innerRef: React.createRef()\r\n}\r\n\r\nIcon.propTypes = {\r\n  icon: propTypes.string.isRequired,\r\n  size: propTypes.oneOf(['xs','sm', 'md', 'lg', 'xl', 'xxl']),\r\n  customSize: propTypes.number,\r\n  color: propTypes.string,\r\n  className: propTypes.string,\r\n  innerRef: propTypes.object\r\n\r\n}\r\n\r\nexport default Icon\r\n"],"file":"Icon.js"}