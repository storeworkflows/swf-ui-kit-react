{"version":3,"sources":["../../src/AvatarGroup/AvatarGroup.js"],"names":["AvatarGroup","props","addNewMember","bind","openAvatar","state","openedAvatar","index","console","log","setState","event","clickable","onAdd","size","max","canAdd","members","canRemove","onRemove","hasAdditionalMembers","length","additionalMembers","copyMembers","slice","viewers","reverse","styles","String","fromCharCode","map","viewer","name","replace","React","Component","defaultProps","propTypes","PropTypes","bool","number","oneOf","array","func"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {Avatar} from \"../index\";\nimport styles from \"./styles.scss\";\n\nclass AvatarGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.addNewMember = this.addNewMember.bind(this);\n        this.openAvatar = this.openAvatar.bind(this);\n        this.state = {\n            openedAvatar: -1\n        }\n    }\n\n    openAvatar(index) {\n        //console.log(...arguments)\n        console.log(index)\n        this.setState({openedAvatar: index})\n    }\n\n    addNewMember(event) {\n        if (this.props.clickable) {\n            this.props.onAdd();\n        }\n    }\n\n    render() {\n        const {size, max, canAdd, clickable, members, canRemove, onRemove} = this.props;\n        const hasAdditionalMembers = members.length > max;\n        const additionalMembers = max - members.length;\n\n        const copyMembers = members.slice();\n\n        const viewers = hasAdditionalMembers ? copyMembers.reverse() : copyMembers.slice(0, max).reverse();\n        console.log({props: this.props, viewers})\n\n\n        return (\n            <>\n                <style type=\"text/css\">{styles}</style>\n                <div className={\n                    classnames({\n                        \"avatar-container\": true,\n                        [`--${size}`]: true\n                    })\n                }\n                >\n                    {canAdd && <div\n                        className={classnames({\n                            \"avatar-multiple\": true,\n                            \"add-new-member\": true\n                        })}\n                        onClick={this.addNewMember}\n                    >\n                        <p className=\"additional-avatar\">{String.fromCharCode(43)}</p>\n                    </div>}\n\n                    {hasAdditionalMembers && <div className={classnames({\n                        \"avatar-multiple\": true,\n                        \"additional-members\": true\n                    })}>\n                        <p className=\"additional-avatar\">{String.fromCharCode(43)}{additionalMembers}</p>\n                    </div>}\n\n                    {viewers.map((viewer, index) => (\n                        <div onClick={this.openAvatar.bind(this, index)}>\n                            <Avatar\n                                key={index + viewer.name.replace(\"\", \"_\")}\n                                size={size}\n                                canRemove={canRemove}\n                                onDelete={onRemove}\n                                member={viewer}\n                                manageOpened={true}\n                                open={this.state?.openedAvatar === index}\n                            />\n                        </div>\n                    ))\n                    }\n                </div>\n            </>\n        )\n    }\n}\n\nAvatarGroup.defaultProps = {\n    clickable: true,\n    max: 5,\n    size: \"xs\",\n    members: [],\n    canRemove: true,\n    canAdd: true,\n    onAdd: () => void 0,\n    onRemove: () => void 0,\n}\n\nAvatarGroup.propTypes = {\n    clickable: PropTypes.bool,\n    max: PropTypes.number,\n    size: PropTypes.oneOf([\"xs\", \"md\", \"lg\"]),\n    members: PropTypes.array,\n    canRemove: PropTypes.bool,\n    canAdd: PropTypes.bool,\n    onAdd: PropTypes.func,\n    onRemove: PropTypes.func,\n}\n\nexport default AvatarGroup"],"file":"AvatarGroup.js"}