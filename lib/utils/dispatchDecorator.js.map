{"version":3,"sources":["../../src/utils/dispatchDecorator.js"],"names":["DispatchDetector","state","dispatch","currentNode","ReactDOM","findDOMNode","type","payload","event","CustomEvent","composed","bubbles","cancelable","detail","dispatchEvent","setState","React","cloneElement","Children","only","props","children","Component"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,gB;;;;;AACF,8BAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAA,eAAM,KAAK,CAAX;AAAA;AAAZ,KAAb;AAFU;AAGb;;;;WAED,6BAAoB;AAChB,UAAMC,WAAW,GAAGC,qBAASC,WAAT,CAAqB,IAArB,CAApB;;AAEA,UAAMH,QAAQ,GAAI,SAAZA,QAAY,CAACI,IAAD,EAAOC,OAAP,EAAmB;AACjC,YAAMC,KAAK,GAAG,IAAIC,WAAJ,CAAgBH,IAAhB,EAAsB;AAChCI,UAAAA,QAAQ,EAAE,IADsB;AAEhCC,UAAAA,OAAO,EAAE,IAFuB;AAGhCC,UAAAA,UAAU,EAAE,IAHoB;AAIhCC,UAAAA,MAAM,EAAE;AACJN,YAAAA,OAAO;AACHD,cAAAA,IAAI,EAAJA;AADG,eAEAC,OAFA;AAGHC,cAAAA,KAAK,EAAE;AACHF,gBAAAA,IAAI,EAAJA;AADG;AAHJ;AADH;AAJwB,SAAtB,CAAd;AAeAH,QAAAA,WAAW,CAACW,aAAZ,CAA0BN,KAA1B;AACH,OAjBD;;AAmBA,WAAKO,QAAL,CAAc;AACVb,QAAAA,QAAQ,EAARA;AADU,OAAd;AAGH;;;WAED,kBAAS;AACL,0BAAOc,KAAK,CAACC,YAAN,CACHD,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoB,KAAKC,KAAL,CAAWC,QAA/B,CADG,EAEH;AAACnB,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAAtB,OAFG,CAAP;AAIH;;;;EAtC0Bc,KAAK,CAACM,S;;AAyC9B,SAASpB,QAAT,GAAoB;AACvB,SAAO,UAACoB,SAAD;AAAA,WAAe,UAACF,KAAD;AAAA,0BAClB,qBAAC,gBAAD;AAAA,+BACI,qBAAC,SAAD,oBAAeA,KAAf;AADJ,QADkB;AAAA,KAAf;AAAA,GAAP;AAIH","sourcesContent":["import * as React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass DispatchDetector extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { dispatch: () => void 0 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const currentNode = ReactDOM.findDOMNode(this);\r\n\r\n        const dispatch =  (type, payload) => {\r\n            const event = new CustomEvent(type, {\r\n                composed: true,\r\n                bubbles: true,\r\n                cancelable: true,\r\n                detail: {\r\n                    payload: {\r\n                        type,\r\n                        ...payload,\r\n                        event: {\r\n                            type\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n            currentNode.dispatchEvent(event);\r\n        };\r\n\r\n        this.setState({\r\n            dispatch\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return React.cloneElement(\r\n            React.Children.only(this.props.children),\r\n            {dispatch: this.state.dispatch}\r\n        );\r\n    }\r\n}\r\n\r\nexport function dispatch() {\r\n    return (Component) => (props) =>\r\n        <DispatchDetector>\r\n            <Component {...props} />\r\n        </DispatchDetector>\r\n}"],"file":"dispatchDecorator.js"}