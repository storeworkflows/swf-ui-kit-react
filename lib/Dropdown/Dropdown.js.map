{"version":3,"sources":["../../src/Dropdown/Dropdown.js"],"names":["Dropdown","props","itemSelected","bind","renderItems","dropdownClicked","state","opened","selectedItems","manageOpened","onOpened","currentOpened","setState","id","manageSelectedItems","onItemSelected","currentSelected","items","map","item","label","disabled","includes","placeholder","name","hasSelected","length","hasLabel","getItemLabelById","result","el","styles","React","Component","defaultProps","propTypes","string","bool","shape","oneOfType","number","arrayOf","func"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport styles from \"./styles.scss\";\r\nimport DropdownItem from \"./DropdownItem\";\r\nimport Icon from \"../Icon/Icon\"\r\n\r\nclass Dropdown extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.itemSelected = this.itemSelected.bind(this);\r\n        this.renderItems= this.renderItems.bind(this);\r\n        this.dropdownClicked = this.dropdownClicked.bind(this);\r\n\r\n        this.state = {\r\n            opened: this.props.opened,\r\n            selectedItems: this.props.selectedItems\r\n        }\r\n\r\n    }\r\n\r\n    dropdownClicked(){\r\n        const {manageOpened, onOpened} = this.props;\r\n        const currentOpened = this.state.opened;\r\n\r\n        if(manageOpened)\r\n            onOpened({ opened: currentOpened});\r\n        else\r\n            this.setState({opened: !currentOpened})\r\n\r\n    }\r\n\r\n    itemSelected({id}){\r\n        const {manageSelectedItems, onItemSelected, manageOpened} = this.props;\r\n        const currentSelected = this.state.selectedItems;\r\n\r\n        if(manageSelectedItems)\r\n            onItemSelected({selectedItems: currentSelected})\r\n        else\r\n        {\r\n            this.setState({selectedItems: [id]});\r\n            if(!manageOpened)\r\n                this.setState({opened: false})\r\n        }\r\n    }\r\n\r\n    renderItems() {\r\n        const {items} = this.props;\r\n        const {opened, selectedItems} = this.state;\r\n\r\n        if(opened) {\r\n            return <div className={\"dropdown-items\"}>\r\n                {items.map((item) => {\r\n                    const {id, label, disabled} = item;\r\n\r\n                    return <DropdownItem\r\n                        key = {id}\r\n                        onSelectAction={this.itemSelected}\r\n                        id={id}\r\n                        label={label}\r\n                        disabled={this.props.disabled || disabled}\r\n                        isSelected={selectedItems.includes(id)}\r\n                    />\r\n                })}\r\n            </div>\r\n        } else\r\n            return null;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {opened, selectedItems, manageOpened, manageSelectedItems} = this.props;\r\n\r\n        if(manageOpened && opened !== this.state.opened)\r\n            this.setState({opened: opened});\r\n\r\n        if(manageSelectedItems && selectedItems!== this.state.selectedItems)\r\n            this.setState({selectedItems: selectedItems});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            disabled,\r\n            placeholder,\r\n            items,\r\n            name\r\n        } = this.props;\r\n\r\n        const {selectedItems, opened} = this.state;\r\n\r\n        let hasSelected= (selectedItems.length > 0 );\r\n        let hasLabel = hasSelected || placeholder;\r\n\r\n\r\n        let getItemLabelById = (id) => {\r\n            let result = '';\r\n            items.map( el => {\r\n                   if(el.id === id)\r\n                       result = el.label;\r\n            })\r\n            return result;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <style type=\"text/css\">{styles}</style>\r\n                <div className={\"dropdown-container\"}>\r\n                    <input type=\"hidden\" name={name}/>\r\n                    <button\r\n                        onClick={()=>this.dropdownClicked()}\r\n                        disabled={disabled}\r\n                        className={ classnames({\r\n                            \"dropdown-button\" : true,\r\n                            \"opened\": opened,\r\n                            \"disabled\": disabled\r\n                        })}\r\n                    >\r\n                        {hasLabel &&\r\n                            <span  className={classnames({\r\n                                    \"dropdown-label\": true,\r\n                                    \"placeholder\": !hasSelected\r\n                                })}\r\n                            >\r\n                                { hasSelected ? getItemLabelById(selectedItems[0]): placeholder}\r\n                            </span>\r\n                        }\r\n                        <div className={\"dropdown-caret\"}><Icon icon={\"caret-down-fill\"} customSize={12} /></div>\r\n                    </button>\r\n                    {this.renderItems()}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nDropdown.defaultProps = {\r\n    disabled: false,\r\n    items: [],\r\n    manageOpened: false,\r\n    manageSelectedItems: false,\r\n    opened: false,\r\n    selectedItems: []\r\n}\r\n\r\nDropdown.propTypes = {\r\n    name: propTypes.string,\r\n    disabled: propTypes.bool,\r\n    items: propTypes.shape({\r\n        id: propTypes.oneOfType([\r\n            propTypes.string,\r\n            propTypes.number\r\n        ]),\r\n        label: propTypes.string,\r\n        disabled: propTypes.bool\r\n    }),\r\n    manageOpened: propTypes.bool,\r\n    manageSelectedItems: propTypes.bool,\r\n    opened: propTypes.bool,\r\n    placeholder: propTypes.string,\r\n    selectedItems: propTypes.arrayOf(\r\n        propTypes.oneOfType([\r\n            propTypes.string,\r\n            propTypes.number]\r\n        )),\r\n    onOpened: propTypes.func,\r\n    onItemSelected: propTypes.func\r\n}\r\n\r\nexport default Dropdown\r\n"],"file":"Dropdown.js"}