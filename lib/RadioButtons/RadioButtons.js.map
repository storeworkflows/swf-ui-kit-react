{"version":3,"sources":["../../src/RadioButtons/RadioButtons.js"],"names":["RadioButtons","props","optionClicked","bind","optionInvalid","state","selectedValue","value","isInvalid","invalid","option","manageValue","onChange","setState","id","manageInvalid","onInvalid","name","label","checked","readonly","disabled","isChecked","isHorizontal","layout","RADIO_BUTTONS_LAYOUT","horizontal","required","options","styles","map","renderValue","React","Component","defaultProps","vertical","propTypes","bool","string","oneOf","arrayOf","shape","func"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport styles from \"./styles.scss\"\r\nimport RadioOption from \"./RadioOption.js\"\r\nimport {RADIO_BUTTONS_LAYOUT} from \"./constants\";\r\n\r\nclass RadioButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.optionClicked = this.optionClicked.bind(this);\r\n        this.optionInvalid = this.optionInvalid.bind(this);\r\n\r\n        this.state = {\r\n            selectedValue: this.props.value,\r\n            isInvalid: this.props.invalid\r\n        }\r\n    }\r\n\r\n    optionClicked(option){\r\n        const {manageValue, onChange} = this.props;\r\n        if(manageValue)\r\n            onChange(option)\r\n        else\r\n            this.setState({selectedValue: option.id});\r\n    }\r\n\r\n    optionInvalid(){\r\n        const {manageInvalid, onInvalid} = this.props;\r\n        if(manageInvalid)\r\n            onInvalid()\r\n        else\r\n            this.setState({isInvalid: true});\r\n    }\r\n\r\n    renderValue(option, name){\r\n        const {\r\n            id,\r\n            label,\r\n            value,\r\n            checked,\r\n            readonly,\r\n            disabled\r\n        } = option;\r\n\r\n        let isChecked = this.state.selectedValue ? this.state.selectedValue === id : checked\r\n        let isHorizontal = this.props.layout === RADIO_BUTTONS_LAYOUT.horizontal;\r\n\r\n        return (\r\n            <RadioOption\r\n                key={id}\r\n                id = {id}\r\n                label = {label}\r\n                value = {value}\r\n                checked = {isChecked}\r\n                readonly = {readonly || this.props.readonly}\r\n                disabled = {disabled || this.props.disabled}\r\n                required = {this.props.required}\r\n                invalid = {this.state.isInvalid}\r\n                name = {name}\r\n                onChangeAction = {this.optionClicked}\r\n                onInvalidAction = {this.optionInvalid}\r\n                isHorizontal = {isHorizontal}\r\n            />\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        let {value, invalid, manageValue, manageInvalid} = this.props;\r\n\r\n        if(manageValue && value!== this.state.selectedValue)\r\n            this.setState({selectedValue: value});\r\n\r\n        if(manageInvalid && invalid!== this.state.isInvalid)\r\n            this.setState({isInvalid: invalid});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            label,\r\n            name,\r\n            options,\r\n            required\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <style type=\"text/css\">{styles}</style>\r\n                <div className={\"radio-buttons-container\"}>\r\n                    <div className={classnames({\r\n                                 \"radio-buttons-header\": true,\r\n                                 \"invalid\": this.state.isInvalid\r\n                             })}\r\n                    >\r\n                        { label && <span className={\"radio-buttons-label\"}>{label}</span>}\r\n                        { required && <span className={\"radio-buttons-required\"}>*</span>}\r\n                    </div>\r\n                    <div className={\"group-of-radio-buttons\"}>\r\n                        {options.map((option) => this.renderValue(option, name))}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nRadioButtons.defaultProps = {\r\n    disabled: false,\r\n    layout: RADIO_BUTTONS_LAYOUT.vertical,\r\n    manageValue: false,\r\n    options: [],\r\n    readonly: false,\r\n    required: false,\r\n    manageInvalid: false\r\n};\r\n\r\nRadioButtons.propTypes = {\r\n    disabled: propTypes.bool,\r\n    invalid: propTypes.bool,\r\n    label: propTypes.string,\r\n    layout: propTypes.oneOf(\r\n        [RADIO_BUTTONS_LAYOUT.vertical, RADIO_BUTTONS_LAYOUT.horizontal]\r\n    ),\r\n    manageValue: propTypes.bool,\r\n    manageInvalid: propTypes.bool,\r\n    name: propTypes.string,\r\n    options: propTypes.arrayOf(\r\n        propTypes.shape({\r\n            id: propTypes.string,\r\n            label: propTypes.string,\r\n            value: propTypes.string,\r\n            checked: propTypes.bool,\r\n            readonly: propTypes.bool,\r\n            disabled: propTypes.bool\r\n    })),\r\n    readonly: propTypes.bool,\r\n    required: propTypes.bool,\r\n    value: propTypes.string,\r\n    onChange: propTypes.func,\r\n    onInvalid: propTypes.func\r\n}\r\n\r\nexport default RadioButtons"],"file":"RadioButtons.js"}