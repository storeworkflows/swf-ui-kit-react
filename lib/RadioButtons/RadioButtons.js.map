{"version":3,"sources":["../../src/RadioButtons/RadioButtons.js"],"names":["RadioButtons","props","option","name","id","label","value","checked","readonly","disabled","isChecked","invalid","layout","manageValue","options","required","styles","map","renderValue","React","Component","defaultProps","propTypes","bool","string","oneOf","arrayOf","shape"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nimport styles from \"./styles.scss\"\r\nimport RadioOption from \"./RadioOption.js\"\r\nimport Icon from \"../Icon/Icon\";\r\n\r\nclass RadioButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    renderValue(option, name){\r\n        const {\r\n            id,\r\n            label,\r\n            value,\r\n            checked,\r\n            readonly,\r\n            disabled\r\n        } = option;\r\n\r\n        let isChecked = this.props.value ? this.props.value === id : checked\r\n        return (\r\n            <RadioOption\r\n                key={id}\r\n                id = {id}\r\n                label = {label}\r\n                value = {value}\r\n                checked = {isChecked}\r\n                readonly = {readonly || this.props.readonly}\r\n                disabled = {disabled || this.props.disabled}\r\n                name = {name}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            invalid,\r\n            label,\r\n            layout,\r\n            manageValue,\r\n            name,\r\n            options,\r\n            required\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <style type=\"text/css\">{styles}</style>\r\n                <div className={\"radio-buttons-container\"}>\r\n                    { label && <span>{label}</span>}\r\n                    { required &&\r\n                        <Icon\r\n                            icon={\"exclamation\"}\r\n                            customSize={20}\r\n                            color={ invalid ? \"red\" : \"black\" }\r\n                        />\r\n                    }\r\n                    <div className={\"group-of-radio-buttons\"}>\r\n                        {options.map((option) => this.renderValue(option, name))}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nRadioButtons.defaultProps = {\r\n    disabled: false,\r\n    layout: \"vertical\",\r\n    manageValue: false,\r\n    options: [],\r\n    readonly: false,\r\n    required: false\r\n};\r\n\r\nRadioButtons.propTypes = {\r\n    disabled: propTypes.bool,\r\n    invalid: propTypes.bool,\r\n    label: propTypes.string,\r\n    layout: propTypes.oneOf([\"vertical\", \"horizontal\"]),\r\n    manageValue: propTypes.bool,\r\n    name: propTypes.string,\r\n    options: propTypes.arrayOf(\r\n        propTypes.shape({\r\n            id: propTypes.string,\r\n            label: propTypes.string,\r\n            value: propTypes.string,\r\n            checked: propTypes.bool,\r\n            readonly: propTypes.bool,\r\n            disabled: propTypes.bool\r\n    })),\r\n    readonly: propTypes.bool,\r\n    required: propTypes.bool,\r\n    value: propTypes.string\r\n}\r\n\r\nexport default RadioButtons"],"file":"RadioButtons.js"}