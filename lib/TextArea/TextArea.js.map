{"version":3,"sources":["../../src/TextArea/TextArea.js"],"names":["TextArea","props","textAreaRef","React","createRef","onChange","bind","onFocus","onBlur","state","value","parentHeight","textareaHeight","focused","event","setState","target","onKeyDown","prevProps","prevState","snapshot","autofocus","current","focus","_hasLabel","Boolean","label","styles","minHeight","className","resize","elm","name","Component","defaultProps","autoresize","propTypes","bool","string","func"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styles from \"./styles.css\";\r\nimport classnames from \"classnames\";\r\nimport autosize from \"autosize/dist/autosize\";\r\n\r\nclass TextArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textAreaRef = React.createRef();\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onFocus = this.onFocus.bind(this);\r\n        this.onBlur = this.onBlur.bind(this);\r\n        this.state = {\r\n            value: \"\",\r\n            parentHeight: \"auto\",\r\n            textareaHeight: \"auto\",\r\n            focused: false\r\n        }\r\n    }\r\n\r\n    onChange (event) {\r\n        this.setState({value: event.target.value})\r\n        this.props.onKeyDown(event)\r\n    }\r\n    onFocus(event) {\r\n        this.setState({focused: true})\r\n    }\r\n\r\n    onBlur () {\r\n        this.setState({focused: false})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.autofocus && this.textAreaRef.current) {\r\n            autosize(this.textAreaRef.current);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.autofocus && this.textAreaRef.current) {\r\n            this.textAreaRef.current.focus()\r\n            autosize(this.textAreaRef.current);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const _hasLabel = Boolean(this.props.label);\r\n        return (\r\n            <>\r\n                <style type=\"text/css\">{styles}</style>\r\n                <div\r\n                    className=\"form-group\"\r\n                    style={{\r\n                        minHeight: this.state.parentHeight\r\n                    }}\r\n                >\r\n                    {_hasLabel && <label htmlFor=\"name\" className={classnames({\r\n                        \"--moved\": this.state.focused || (this.props.value || this.state.value),\r\n                        \"--focused\": this.state.focused\r\n                    })}>{this.props.label}</label>}\r\n                    <textarea\r\n                        className={classnames({\r\n                            \"form-control\": true,\r\n                            [this.props.className]: true,\r\n                            \"resize\": this.props.resize\r\n                        })}\r\n                        ref={(elm) => this.textAreaRef.current = elm}\r\n                        name={this.props.name}\r\n                        value={this.props.value || this.state.value}\r\n                        onInput={this.onChange}\r\n                        onKeyDown={this.onChange}\r\n                        onFocus={this.onFocus}\r\n                        onBlur={this.onBlur}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nTextArea.defaultProps = {\r\n    autoresize: false,\r\n    autofocus: true,\r\n    className: \"\",\r\n    onChange: () => void 0,\r\n    onKeyDown: () => void 0,\r\n    name: \"\",\r\n    value: \"\",\r\n    resize: true,\r\n    label: \"\"\r\n}\r\n\r\nTextArea.propTypes = {\r\n    autoresize: propTypes.bool,\r\n    value: propTypes.string,\r\n    label: propTypes.string,\r\n    name: propTypes.string,\r\n    onChange: propTypes.func,\r\n    onKeyDown: propTypes.func,\r\n    className: propTypes.string,\r\n    autofocus: propTypes.bool,\r\n    resize: propTypes.bool\r\n}\r\n\r\nexport default TextArea\r\n"],"file":"TextArea.js"}