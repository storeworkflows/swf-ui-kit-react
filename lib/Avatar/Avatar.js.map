{"version":3,"sources":["../../src/Avatar/Avatar.js"],"names":["console","shallowCloneLog","typeString","Function","prototype","call","bind","Object","toString","log","apply","Array","map","arguments","x","slice","out","create","getPrototypeOf","constructor","key","defineProperty","value","Avatar","props","fixPhotoSize","onClick","state","open","clickable","setState","name","split","i","join","toUpperCase","event","nativeEvent","path","composedPath","image","naturalWidth","naturalHeight","sizes","parameters","size","style","width","height","avatarVisible","color","manageOpened","member","avatar","title","id","canRemove","hasAvatar","Boolean","avatarIsVisible","openState","styles","getInitials","e","onRemove","stopPropagation","React","Component","defaultProps","noop","propTypes","PropTypes","bool","oneOf","shape","string","required","func"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport {noop, normalizeURL} from \"../utils\";\r\nimport styles from \"./styles.scss\";\r\nimport {Icon} from \"../index\";\r\n\r\nconsole.shallowCloneLog = function(){\r\n    var typeString = Function.prototype.call.bind(Object.prototype.toString)\r\n    console.log.apply(console, Array.prototype.map.call(arguments, function(x){\r\n        switch (typeString(x).slice(8, -1)) {\r\n            case 'Number': case 'String': case 'Undefined': case 'Null': case 'Boolean': return x;\r\n            case 'Array': return x.slice();\r\n            default:\r\n                var out = Object.create(Object.getPrototypeOf(x));\r\n                out.constructor = x.constructor;\r\n                for (var key in x) {\r\n                    out[key] = x[key];\r\n                }\r\n                Object.defineProperty(out, 'constructor', {value: x.constructor});\r\n                return out;\r\n        }\r\n    }));\r\n}\r\n\r\n\r\nclass Avatar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fixPhotoSize = this.fixPhotoSize.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    onClick() {\r\n        if (this.props.clickable) {\r\n            this.setState({open: !this.state?.open})\r\n            this.props.onClick();\r\n        }\r\n    }\r\n\r\n    getInitials(name) {\r\n        return name\r\n            .split(\" \")\r\n            .map(i => i[0])\r\n            .join(\"\")\r\n            .toUpperCase();\r\n    }\r\n\r\n    fixPhotoSize(event) {\r\n        const {nativeEvent} = event;\r\n        const { path = nativeEvent.composedPath() } = nativeEvent;\r\n\r\n        const image = path[0];\r\n        const { naturalWidth, naturalHeight } = image;\r\n\r\n        const sizes = {\r\n            \"xs\": \"1.5rem\",\r\n            \"md\": \"2rem\",\r\n            \"lg\": \"2.5rem\"\r\n        }\r\n\r\n        const parameters = sizes[this.props.size]\r\n\r\n        image.style.width = naturalWidth < naturalHeight ? parameters : \"auto\";\r\n        image.style.height = naturalWidth < naturalHeight ? \"auto\" : parameters;\r\n\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            avatarVisible,\r\n            open,\r\n            color,\r\n            manageOpened,\r\n            member: {\r\n                avatar,\r\n                name,\r\n                title,\r\n                id\r\n            },\r\n            size,\r\n            canRemove,\r\n            clickable\r\n        } = this.props;\r\n\r\n        const hasAvatar = Boolean(avatar);\r\n        const avatarIsVisible = !hasAvatar && avatarVisible;\r\n\r\n        const openState = manageOpened ? open : this.state?.open;\r\n\r\n        return (\r\n            <>\r\n                <style type=\"text/css\">{styles}</style>\r\n                <div\r\n                    className={classnames({\r\n                        \"avatar\": true,\r\n                        [`--${size}`]: true,\r\n                        [`--${color}`]: true,\r\n                        \"--clickable\": clickable,\r\n                        \"--selected\": openState,\r\n                    })}\r\n                    onClick={this.onClick}\r\n                >\r\n                    {hasAvatar && <div className=\"photo-container\">\r\n                        <img\r\n                            title={name}\r\n                            onLoad={this.fixPhotoSize}\r\n                            className=\"member-photo\"\r\n                            src={normalizeURL(`/${avatar}`)}\r\n                        />\r\n                    </div>}\r\n                    {avatarIsVisible && <div className={classnames({\r\n                        \"member-container\": true,\r\n                        \"--selected\": this.state?.open\r\n                    })}>\r\n                        <p className=\"initials\" title={name}>{this.getInitials(name)}</p>\r\n                    </div>}\r\n\r\n                    <div className={classnames(\r\n                        {\r\n                            \"member-info\": true,\r\n                            \"visible\": openState\r\n                        })}>\r\n                        <p className=\"name\">{name}</p>\r\n                        <p className=\"title\">{title}</p>\r\n                    </div>\r\n                    <Icon\r\n                        onClick={(e) => {\r\n                            this.props.onRemove({id})\r\n                            e.stopPropagation();\r\n                        }}\r\n                        className={classnames({\r\n                            \"remove\":true,\r\n                            \"visible\": canRemove && openState\r\n                        })}\r\n                        icon=\"x\"\r\n                        size=\"md\"\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nAvatar.defaultProps = {\r\n    clickable: true,\r\n    open: false,\r\n    manageOpened: false,\r\n    size: \"xs\",\r\n    canRemove: false,\r\n    avatarVisible: true,\r\n    color: \"default\",\r\n    onRemove: noop,\r\n    onClick: noop\r\n}\r\n\r\nAvatar.propTypes = {\r\n    avatarVisible: PropTypes.bool,\r\n    canRemove: PropTypes.bool,\r\n    clickable: PropTypes.bool,\r\n    manageOpened: PropTypes.bool,\r\n    open: PropTypes.bool,\r\n    size: PropTypes.oneOf([\"xs\", \"md\", \"lg\"]),\r\n    member: PropTypes.shape({\r\n        name: PropTypes.string.required,\r\n        title: PropTypes.string,\r\n        avatar: PropTypes.string,\r\n        id: PropTypes.string.required\r\n    }),\r\n    onRemove: PropTypes.func,\r\n    color: PropTypes.oneOf([\"default\", \"primary\", \"negative\"]),\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Avatar"],"file":"Avatar.js"}