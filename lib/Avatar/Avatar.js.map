{"version":3,"sources":["../../src/Avatar/Avatar.js"],"names":["console","shallowCloneLog","typeString","Function","prototype","call","bind","Object","toString","log","apply","Array","map","arguments","x","slice","out","create","getPrototypeOf","constructor","key","defineProperty","value","Avatar","props","fixPhotoSize","onClick","state","open","clickable","setState","name","split","i","join","toUpperCase","event","nativeEvent","path","composedPath","image","naturalWidth","naturalHeight","sizes","parameters","size","style","width","height","id","avatarVisible","color","manageOpened","member","avatar","title","canRemove","hasAvatar","Boolean","avatarIsVisible","openState","styles","getInitials","e","stopPropagation","onRemove","React","Component","defaultProps","noop","propTypes","PropTypes","oneOfType","string","number","bool","oneOf","shape","required","func"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport {noop, normalizeURL} from \"../utils\";\nimport styles from \"./styles.scss\";\nimport {Icon} from \"../index\";\n\nconsole.shallowCloneLog = function () {\n    var typeString = Function.prototype.call.bind(Object.prototype.toString)\n    console.log.apply(console, Array.prototype.map.call(arguments, function (x) {\n        switch (typeString(x).slice(8, -1)) {\n            case 'Number':\n            case 'String':\n            case 'Undefined':\n            case 'Null':\n            case 'Boolean':\n                return x;\n            case 'Array':\n                return x.slice();\n            default:\n                var out = Object.create(Object.getPrototypeOf(x));\n                out.constructor = x.constructor;\n                for (var key in x) {\n                    out[key] = x[key];\n                }\n                Object.defineProperty(out, 'constructor', {value: x.constructor});\n                return out;\n        }\n    }));\n}\n\n\nclass Avatar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.fixPhotoSize = this.fixPhotoSize.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.state = {\n            open: false\n        }\n    }\n\n    onClick() {\n        if (this.props.clickable) {\n            this.setState({open: !this.state?.open})\n            this.props.onClick();\n        }\n    }\n\n    getInitials(name) {\n        return name\n            .split(\" \")\n            .map(i => i[0])\n            .join(\"\")\n            .toUpperCase();\n    }\n\n    fixPhotoSize(event) {\n        const {nativeEvent} = event;\n        const {path = nativeEvent.composedPath()} = nativeEvent;\n\n        const image = path[0];\n        const {naturalWidth, naturalHeight} = image;\n\n        const sizes = {\n            \"xs\": \"1.5rem\",\n            \"md\": \"2rem\",\n            \"lg\": \"2.5rem\"\n        }\n\n        const parameters = sizes[this.props.size]\n\n        image.style.width = naturalWidth < naturalHeight ? parameters : \"auto\";\n        image.style.height = naturalWidth < naturalHeight ? \"auto\" : parameters;\n\n    }\n\n    render() {\n        const {\n            id,\n            avatarVisible,\n            open,\n            color,\n            manageOpened,\n            member: {\n                avatar,\n                name,\n                title\n            },\n            size,\n            canRemove,\n            clickable\n        } = this.props;\n\n        const hasAvatar = Boolean(avatar);\n        const avatarIsVisible = !hasAvatar && avatarVisible;\n\n        const openState = manageOpened ? open : this.state?.open;\n\n        return (\n            <>\n                <style type=\"text/css\">{styles}</style>\n                <div\n                    className={classnames({\n                        \"avatar\": true,\n                        [`--${size}`]: true,\n                        [`--${color}`]: true,\n                        \"--clickable\": clickable,\n                        \"--selected\": openState,\n                    })}\n                    onClick={this.onClick}\n                >\n                    {hasAvatar && <div className=\"photo-container\">\n                        <img\n                            title={name}\n                            onLoad={this.fixPhotoSize}\n                            className=\"member-photo\"\n                            src={normalizeURL(`/${avatar}`)}\n                        />\n                    </div>}\n                    {avatarIsVisible && <div className={classnames({\n                        \"member-container\": true,\n                        \"--selected\": this.state?.open\n                    })}>\n                        <p className=\"initials\" title={name}>{this.getInitials(name)}</p>\n                    </div>}\n\n                    <div className={classnames(\n                        {\n                            \"member-info\": true,\n                            \"visible\": openState\n                        })}>\n                        <p className=\"name\">{name}</p>\n                        <p className=\"title\">{title}</p>\n                    </div>\n                    <div onClick={(e) => {\n                        e.stopPropagation();\n                        console.log(\"Remove clicked\", id)\n                        this.props.onRemove({id});\n                    }}>\n\n                        <Icon\n                            className={classnames({\n                                \"remove\": true,\n                                \"visible\": canRemove && openState\n                            })}\n                            icon=\"x\"\n                            size=\"md\"\n                        />\n                    </div>\n\n                </div>\n            </>\n        )\n    }\n}\n\nAvatar.defaultProps = {\n    id: 0,\n    clickable: true,\n    open: false,\n    manageOpened: false,\n    size: \"xs\",\n    canRemove: false,\n    avatarVisible: true,\n    color: \"default\",\n    onRemove: noop,\n    onClick: noop\n}\n\nAvatar.propTypes = {\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    avatarVisible: PropTypes.bool,\n    canRemove: PropTypes.bool,\n    clickable: PropTypes.bool,\n    manageOpened: PropTypes.bool,\n    open: PropTypes.bool,\n    size: PropTypes.oneOf([\"xs\", \"md\", \"lg\"]),\n    member: PropTypes.shape({\n        name: PropTypes.string.required,\n        title: PropTypes.string,\n        avatar: PropTypes.string,\n    }),\n    onRemove: PropTypes.func,\n    color: PropTypes.oneOf([\"default\", \"primary\", \"negative\"]),\n    onClick: PropTypes.func\n}\n\nexport default Avatar"],"file":"Avatar.js"}