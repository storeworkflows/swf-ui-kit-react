{"version":3,"sources":["../../src/Button/utils.js"],"names":["addStyles","customStyle","styles","hasStyles","SWF_BUTTON","AVAILABLE_CUSTOM_STYLES","forEach","styleName","undefined","getCustomIconSize","sizeStr","result","includes","parseInt","replace","getStandardIconSize","size","getIconSize","icon","hasIcon","length","hasCustomIconSize","iconSize"],"mappings":";;;;;;;AAAA;;AAGA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,WAAD,EAAiB;AAC/B,MAAIC,MAAM,GAAG,EAAb;AACA,MAAMC,SAAS,GAAGF,WAAW,KAAK,IAAlC;AACA,MAAIE,SAAJ,EACIC,sBAAWC,uBAAX,CAAmCC,OAAnC,CAA2C,UAACC,SAAD,EAAe;AACtD,QAAIN,WAAW,CAACM,SAAD,CAAX,KAA2BC,SAA/B,EACGN,MAAM,aAAMK,SAAN,EAAN,GAA2BN,WAAW,CAACM,SAAD,CAAtC;AACN,GAHD;AAKJ,SAAOL,MAAP;AACH,CAVD;;;;AAYA,IAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,OAAD,EAAa;AACnC,MAAIC,MAAJ;;AAEA,UAAO,IAAP;AACI,SAAMD,OAAO,CAACE,QAAR,CAAiB,IAAjB,CAAN;AACID,MAAAA,MAAM,GAAGE,QAAQ,CAACH,OAAO,CAACI,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAAD,CAAjB;AACA;;AACJ,SAAMJ,OAAO,CAACE,QAAR,CAAiB,KAAjB,CAAN;AACID,MAAAA,MAAM,GAAGE,QAAQ,CAACH,OAAO,CAACI,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAD,CAAjB;AACAH,MAAAA,MAAM,IAAE,EAAR;AACA;;AACJ;AACIA,MAAAA,MAAM,GAAG,EAAT;AACA;AAVR;;AAaA,SAAOA,MAAP;AACH,CAjBD;;AAmBA,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAU;AAClC,MAAIL,MAAM,GAAG,CAAb;AAEA,MAAGK,IAAI,KAAK,IAAZ,EACIL,MAAM,GAAG,IAAT,CADJ,KAEK,IAAGK,IAAI,KAAK,IAAZ,EACDL,MAAM,GAAG,GAAT;AAEJA,EAAAA,MAAM,IAAE,EAAR;AACA,SAAOA,MAAP;AACH,CAVD;;AAYA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAAChB,WAAD,EAAciB,IAAd,EAAoBF,IAApB,EAA6B;AAC7C,MAAMb,SAAS,GAAGF,WAAW,KAAK,IAAlC;AACA,MAAMkB,OAAO,GAAED,IAAI,CAACE,MAAL,GAAY,CAA3B;AAEA,MAAIC,iBAAiB,GAAGlB,SAAS,IAAIF,WAAW,CAAC,WAAD,CAAX,KAA2BO,SAAhE;AACA,MAAIc,QAAQ,GAAG,EAAf;AAEA,MAAGH,OAAO,IAAIE,iBAAd,EACIC,QAAQ,GAAGb,iBAAiB,CAACR,WAAW,CAAC,WAAD,CAAZ,CAA5B,CADJ,KAEK,IAAGkB,OAAH,EACDG,QAAQ,GAAGP,mBAAmB,CAACC,IAAD,CAA9B;AAEJ,SAAOM,QAAP;AACH,CAbD","sourcesContent":["import {SWF_BUTTON} from \"./constants\";\n\n\nconst addStyles = (customStyle) => {\n    let styles = {};\n    const hasStyles = customStyle !== null;\n    if (hasStyles)\n        SWF_BUTTON.AVAILABLE_CUSTOM_STYLES.forEach((styleName) => {\n            if (customStyle[styleName] !== undefined)\n               styles[`--${styleName}`] = customStyle[styleName];\n        })\n\n    return styles;\n}\n\nconst getCustomIconSize = (sizeStr) => {\n    let result;\n\n    switch(true) {\n        case (sizeStr.includes(\"px\")):\n            result = parseInt(sizeStr.replace(\"px\", ''));\n            break;\n        case (sizeStr.includes(\"rem\")):\n            result = parseInt(sizeStr.replace(\"rem\", ''));\n            result*=16;\n            break;\n        default:\n            result = 16;\n            break;\n    }\n\n    return result;\n}\n\nconst getStandardIconSize = (size) => {\n    let result = 1;\n\n    if(size === \"sm\")\n        result = 0.75;\n    else if(size === \"lg\")\n        result = 1.5;\n\n    result*=16;\n    return result;\n}\n\nconst getIconSize = (customStyle, icon, size) => {\n    const hasStyles = customStyle !== null;\n    const hasIcon= icon.length>0;\n\n    let hasCustomIconSize = hasStyles && customStyle[\"font-size\"]!==undefined;\n    let iconSize = 16;\n\n    if(hasIcon && hasCustomIconSize )\n        iconSize = getCustomIconSize(customStyle[\"font-size\"]);\n    else if(hasIcon)\n        iconSize = getStandardIconSize(size);\n\n    return iconSize;\n}\n\n\n\n\nexport {\n    getIconSize, addStyles\n}\n"],"file":"utils.js"}