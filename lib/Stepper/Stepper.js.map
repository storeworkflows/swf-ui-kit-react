{"version":3,"sources":["../../src/Stepper/Stepper.js"],"names":["Stepper","props","state","selected","Math","min","steps","length","selectedItem","stepsPerPage","containerRightPos","stepperRef","stepperItemRef","setState","floor","clientWidth","window","addEventListener","index","id","onStepClick","direction","newContainerRightValue","maxRightPos","max","hideLabels","icon","palette","iconSize","map","step","isSelected","isBeforeSelected","iconColor","progress","finished","unfinished","disabled","selectStep","elm","label","sublabel","vertical","showCompletedCount","arrows","isArrowsNeeded","styles","onArrowClick","color","size","width","right","renderSteps","React","Component","propTypes","PropTypes","arrayOf","object","string","bool","number","func","defaultProps","circle","link"],"mappings":"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","sourcesContent":["import styles from \"./Stepper.scss\";\r\nimport Step from './Step/Step';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport classnames from \"classnames\";\r\nimport { createCssVariables } from \"./utils\";\r\nimport Icon from \"../Icon/Icon\";\r\n\r\nclass Stepper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: Math.min(props.steps.length - 1, props.selectedItem - 1),\r\n            stepsPerPage: 0,\r\n            containerRightPos: 0\r\n        };\r\n        this.stepperRef = false;\r\n        this.stepperItemRef = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            stepsPerPage: Math.floor(this.stepperRef.clientWidth / 200)\r\n        });\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.setState({\r\n                stepsPerPage: Math.floor(this.stepperRef.clientWidth / 200)\r\n            });\r\n        })\r\n    }\r\n\r\n    selectStep(index, id) {\r\n        if (this.props.onStepClick) {\r\n            this.props.onStepClick({ index, id });\r\n        }\r\n\r\n        return () => {\r\n            this.setState({\r\n                selected: index\r\n            })\r\n        }\r\n    }\r\n\r\n    onArrowClick(direction) {\r\n        const { containerRightPos, stepsPerPage } = this.state;\r\n        const { steps } = this.props;\r\n\r\n        return () => {\r\n            const newContainerRightValue = containerRightPos + (200 * direction);\r\n            const maxRightPos = 200 * (steps.length - stepsPerPage);\r\n\r\n            this.setState({\r\n                containerRightPos: Math.min(Math.max(newContainerRightValue, 0), maxRightPos)\r\n            })\r\n        }\r\n    }\r\n\r\n    renderSteps() {\r\n        const { steps, hideLabels, palette: { icon }, iconSize } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        return (\r\n            steps.map((step, index) => {\r\n                const isSelected = selected === index;\r\n                const isBeforeSelected = selected > index;\r\n                const iconColor = (isSelected || isBeforeSelected)\r\n                && (step.progress !== 'none' && step.progress !== 'partial')\r\n                || step.progress === 'done'\r\n                    ? (icon.finished || 'white') : (icon.unfinished || 'black');\r\n\r\n                return (\r\n                    <React.Fragment key={'step' + index}>\r\n                        <div\r\n                            className={classnames({\r\n                                'stepper-item': true,\r\n                                '--selected': isSelected,\r\n                                '--before-selected': isBeforeSelected,\r\n                                '--disabled': step.disabled\r\n                            })}\r\n                            onClick={!step.disabled && this.selectStep(index, step.id)}\r\n                            ref={elm => this.stepperItemRef = elm}\r\n                        >\r\n                            <Step\r\n                                icon={step.icon}\r\n                                iconColor={iconColor}\r\n                                iconSize={iconSize}\r\n                                label={step.label}\r\n                                sublabel={step.sublabel}\r\n                                progress={step.progress}\r\n                                hideLabel={hideLabels}\r\n                            />\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { palette, vertical, showCompletedCount, steps, arrows } = this.props;\r\n        const { selected, containerRightPos, stepsPerPage } = this.state;\r\n\r\n        const isArrowsNeeded = stepsPerPage < steps.length;\r\n\r\n        return (\r\n            <>\r\n                <style type=\"text/css\">{createCssVariables(palette) + styles}</style>\r\n                <div\r\n                    className=\"stepper-container\"\r\n                    ref={elm => this.stepperRef = elm}\r\n                >\r\n                    {isArrowsNeeded &&\r\n                    <div\r\n                        className=\"arrow arrow-left\"\r\n                        onClick={this.onArrowClick(-1)}\r\n                    >\r\n                        <div className=\"arrow-icon\">\r\n                            <Icon\r\n                                icon=\"chevron-left\"\r\n                                color={arrows.color}\r\n                                size={arrows.size}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    }\r\n\r\n                    <div\r\n                        className=\"steps-wrapper\"\r\n                        style={{\r\n                            width: isArrowsNeeded ? stepsPerPage * 200 : '100%'\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={classnames({\r\n                                'steps': true,\r\n                                '--vertical': vertical\r\n                            })}\r\n                            style={{\r\n                                width: isArrowsNeeded ? steps.length * 200 : '100%',\r\n                                right: containerRightPos\r\n                            }}\r\n                        >\r\n                            {this.renderSteps()}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {isArrowsNeeded &&\r\n                    <div\r\n                        className=\"arrow arrow-right\"\r\n                        onClick={this.onArrowClick(1)}\r\n                    >\r\n                        <div className=\"arrow-icon\">\r\n                            <Icon\r\n                                icon=\"chevron-right\"\r\n                                color={arrows.color}\r\n                                size={arrows.size}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>\r\n                <div className=\"stepper-counter\">\r\n                    {showCompletedCount &&\r\n                    `${selected + 1}/${steps.length} Completed`\r\n                    }\r\n                </div>\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nStepper.propTypes = {\r\n    steps: PropTypes.arrayOf(PropTypes.object),\r\n    palette: PropTypes.object,\r\n    iconSize: PropTypes.string,\r\n    arrows: PropTypes.object,\r\n    hideLabels: PropTypes.bool,\r\n    vertical: PropTypes.bool,\r\n    showCompletedCount: PropTypes.bool,\r\n    selectedItem: PropTypes.number,\r\n    onStepClick: PropTypes.func\r\n}\r\n\r\nStepper.defaultProps = {\r\n    steps: [],\r\n    palette: {\r\n        icon: {\r\n            finished: '',\r\n            unfinished: ''\r\n        },\r\n        circle: '',\r\n        link: '',\r\n        label: ''\r\n    },\r\n    arrows: {\r\n        color: 'black',\r\n        size: 'md'\r\n    },\r\n    iconSize: 'sm',\r\n    hideLabels: false,\r\n    vertical: false,\r\n    showCompletedCount: false,\r\n    selectedItem: 1\r\n}\r\n\r\nexport default Stepper;"],"file":"Stepper.js"}