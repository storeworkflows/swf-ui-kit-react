{"version":3,"sources":["../../src/Stepper/Stepper.js"],"names":["Stepper","props","state","selected","Math","min","steps","length","selectedItem","stepsPerPage","containerRightPos","containerBottomPos","isArrowsNeeded","stepperContainerRef","arrowRef","updateStepsPerPageAmount","window","addEventListener","vertical","currArrowsSize","clientWidth","floor","setState","index","id","onStepClick","direction","newContainerPosValue","maxContainerPos","max","hideLabels","icon","palette","iconSize","map","step","isSelected","isBeforeSelected","iconColor","progress","finished","unfinished","disabled","selectStep","completedCounter","styles","elm","onArrowClick","arrows","width","height","right","bottom","renderSteps","React","Component","propTypes","PropTypes","arrayOf","object","string","bool","number","func","defaultProps","circle","link","label"],"mappings":"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","sourcesContent":["import styles from \"./Stepper.scss\";\nimport Step from './Step/Step';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from \"classnames\";\nimport { createCssVariables } from \"./utils\";\nimport Icon from \"../Icon/Icon\";\n\nclass Stepper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: Math.min(props.steps.length - 1, props.selectedItem - 1),\n            stepsPerPage: 0,\n            containerRightPos: 0,\n            containerBottomPos: 0,\n            isArrowsNeeded: false\n        };\n        this.stepperContainerRef = false;\n        this.arrowRef = false;\n    }\n\n    componentDidMount() {\n        this.updateStepsPerPageAmount();\n\n        window.addEventListener('resize', () => {\n            this.updateStepsPerPageAmount();\n        })\n    }\n\n    updateStepsPerPageAmount() {\n        const { vertical } = this.props;\n\n        const currArrowsSize = this.state.isArrowsNeeded ? this.arrowRef?.clientWidth * 2 : 0;\n        const stepsPerPage = Math.floor((this.stepperContainerRef[vertical ? 'clientHeight' : 'clientWidth'] - currArrowsSize) / (vertical ? 120 : 200)) || 1;\n\n        this.setState({\n            stepsPerPage,\n            isArrowsNeeded: stepsPerPage < this.props.steps.length\n        });\n\n    }\n\n    selectStep(index, id) {\n        if (this.props.onStepClick) {\n            this.props.onStepClick({ index, id });\n        }\n\n        return () => {\n            this.setState({\n                selected: index\n            })\n        }\n    }\n\n    onArrowClick(direction) {\n        const { stepsPerPage } = this.state;\n        const { steps, vertical } = this.props;\n\n        return () => {\n            const newContainerPosValue = this.state[vertical ? 'containerBottomPos' : 'containerRightPos']\n                + ((vertical ? 120 : 200) * direction);\n            const maxContainerPos = (vertical ? 120 : 200) * (steps.length - stepsPerPage);\n\n            this.setState({\n                [vertical ? 'containerBottomPos' : 'containerRightPos']:\n                    Math.min(Math.max(newContainerPosValue, 0), maxContainerPos)\n            })\n        }\n\n    }\n\n    renderSteps() {\n        const { steps, hideLabels, palette: { icon }, iconSize } = this.props;\n        const { selected } = this.state;\n\n        return (\n            steps.map((step, index) => {\n                const isSelected = selected === index;\n                const isBeforeSelected = selected > index;\n                const iconColor = (isSelected || isBeforeSelected)\n                && (step.progress !== 'none' && step.progress !== 'partial')\n                || step.progress === 'done'\n                    ? (icon.finished || 'white') : (icon.unfinished || 'black');\n\n                return (\n                    <div\n                        className={classnames({\n                            'steps-item': true,\n                            '--selected': isSelected,\n                            '--before-selected': isBeforeSelected,\n                            '--disabled': step.disabled\n                        })}\n                        key={'step' + index}\n                        onClick={!step.disabled && this.selectStep(index, step.id)}\n                    >\n                        <Step\n                            iconColor={iconColor}\n                            iconSize={iconSize}\n                            step={step}\n                            hideLabel={hideLabels}\n                            isSelected={isSelected}\n                            isBeforeSelected={isBeforeSelected}\n                        />\n                    </div>\n                )\n            })\n        )\n    }\n\n    render() {\n        const { palette, vertical, completedCounter, steps, iconSize } = this.props;\n        const { selected, containerRightPos, containerBottomPos, stepsPerPage, isArrowsNeeded } = this.state;\n\n        return (\n            <div\n                className={classnames({\n                    'stepper': true,\n                    '--vertical': vertical\n                })}\n            >\n                <style type=\"text/css\">{createCssVariables(palette, iconSize) + styles}</style>\n                <div\n                    className=\"stepper-container\"\n                    ref={elm => this.stepperContainerRef = elm}\n                >\n                    {isArrowsNeeded &&\n                    <div\n                        className=\"arrow arrow-left\"\n                        onClick={this.onArrowClick(-1)}\n                        ref={elm => this.arrowRef = elm}\n                    >\n                        <div className=\"arrow-icon\">\n                            <Icon\n                                icon={vertical ? \"chevron-up\" : \"chevron-left\"}\n                                color={palette.arrows}\n                            />\n                        </div>\n                    </div>\n                    }\n\n                    <div\n                        className=\"steps-shown\"\n                        style={{\n                            width: isArrowsNeeded && !vertical ? stepsPerPage * 200 : '100%',\n                            height: stepsPerPage * 120\n                        }}\n                    >\n                        <div\n                            className=\"steps-all\"\n                            style={{\n                                width: isArrowsNeeded && !vertical ? steps.length * 200 : '100%',\n                                right: vertical ? 0 : containerRightPos,\n                                bottom: vertical ? containerBottomPos : 0\n                            }}\n                        >\n                            {this.renderSteps()}\n                        </div>\n                    </div>\n\n                    {isArrowsNeeded &&\n                    <div\n                        className=\"arrow arrow-right\"\n                        onClick={this.onArrowClick(1)}\n                    >\n                        <div className=\"arrow-icon\">\n                            <Icon\n                                icon={vertical ? \"chevron-down\" : \"chevron-right\"}\n                                color={palette.arrows}\n                            />\n                        </div>\n                    </div>\n                    }\n                </div>\n                <div className=\"stepper-counter\">\n                    {completedCounter &&\n                    `${selected + 1}/${steps.length} Completed`\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nStepper.propTypes = {\n    steps: PropTypes.arrayOf(PropTypes.object),\n    palette: PropTypes.object,\n    iconSize: PropTypes.string,\n    hideLabels: PropTypes.bool,\n    vertical: PropTypes.bool,\n    completedCounter: PropTypes.bool,\n    selectedItem: PropTypes.number,\n    onStepClick: PropTypes.func\n}\n\nStepper.defaultProps = {\n    steps: [],\n    palette: {\n        icon: {\n            finished: '',\n            unfinished: ''\n        },\n        circle: '',\n        link: '',\n        label: '',\n        arrows: 'black'\n    },\n    iconSize: 'sm',\n    hideLabels: false,\n    vertical: false,\n    completedCounter: false,\n    selectedItem: 1\n}\n\nexport default Stepper;"],"file":"Stepper.js"}