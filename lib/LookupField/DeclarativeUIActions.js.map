{"version":3,"sources":["../../src/LookupField/DeclarativeUIActions.js"],"names":["DeclarativeUIActions","props","formatActions","bind","state","actions","icon","icons","declarativeUiActions","formattedActions","map","actionDispatch","assignmentId","requiresValue","tooltip","compareIcon","id","_","isEqual","setState","action","record","sysId","React","Component","propTypes","array","object","required"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,oB;;;;;AACF,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAHe;AAMlB;;;;WAED,qBAAYC,IAAZ,EAAkB;AACd,UAAMC,KAAK,GAAG;AACV,+BAAuB,aADb;AAEV,oCAA4B;AAFlB,OAAd;AAKA,aAAOA,KAAK,CAACD,IAAD,CAAZ;AACH;;;WAED,uBAAcL,KAAd,EAAqB;AAAA;;AACjB,UAAMI,OAAO,GAAGJ,KAAK,CAACO,oBAAtB;AAEA,UAAMC,gBAAgB,GAAGJ,OAAO,CAACK,GAAR,CAAY,gBAAkE;AAAA,YAAhEC,cAAgE,QAAhEA,cAAgE;AAAA,YAAhDC,YAAgD,QAAhDA,YAAgD;AAAA,YAAlCN,IAAkC,QAAlCA,IAAkC;AAAA,YAA5BO,aAA4B,QAA5BA,aAA4B;AAAA,YAAbC,OAAa,QAAbA,OAAa;AACnG,eAAO;AACHH,UAAAA,cAAc,EAAEA,cADb;AAEHL,UAAAA,IAAI,EAAE,MAAI,CAACS,WAAL,CAAiBT,IAAjB,CAFH;AAGHU,UAAAA,EAAE,EAAEJ,YAHD;AAIHC,UAAAA,aAAa,EAAbA,aAJG;AAKHC,UAAAA,OAAO,EAAPA;AALG,SAAP;AAOH,OARwB,CAAzB;;AAUA,UAAI,CAACG,mBAAEC,OAAF,CAAUT,gBAAV,EAA4B,KAAKL,KAAL,CAAWC,OAAvC,CAAL,EAAsD;AAClD,aAAKc,QAAL,CAAc;AACVd,UAAAA,OAAO,EAAEI;AADC,SAAd;AAGH;AAEJ;;;WAED,kBAAS;AAAA;;AACL,WAAKP,aAAL,CAAmB,KAAKD,KAAxB;AADK,UAEEI,OAFF,GAEa,KAAKD,KAFlB,CAEEC,OAFF;AAIL,aAAOA,OAAO,CAACK,GAAR,CAAY,UAAAU,MAAM;AAAA,4BACrB;AAEI,UAAA,KAAK,EAAEA,MAAM,CAACN,OAFlB;AAGI,UAAA,SAAS,EACL,4BAAW;AACP,sBAAU,IADH;AAEP,uBAAW,CAACM,MAAM,CAACP,aAAR,IAAyB,MAAI,CAACZ,KAAL,CAAWoB,MAAX,CAAkBC;AAF/C,WAAX,CAJR;AAAA,iCAQM,qBAAC,gBAAD;AAAM,YAAA,IAAI,EAAEF,MAAM,CAACd;AAAnB;AARN,WACSc,MAAM,CAACJ,EADhB,CADqB;AAAA,OAAlB,CAAP;AAWH;;;;EAtD8BO,KAAK,CAACC,S;;AA2DzCxB,oBAAoB,CAACyB,SAArB,GAAiC;AAC7BjB,EAAAA,oBAAoB,EAAEiB,sBAAUC,KADH;AAE7BL,EAAAA,MAAM,EAAEI,sBAAUE,MAAV,CAAiBC;AAFI,CAAjC;eAKe5B,oB","sourcesContent":["import * as React from \"react\";\nimport propTypes from \"prop-types\";\nimport Icon from \"../Icon/Icon\";\nimport classNames from \"classnames\"\n\nimport _ from \"lodash\";\n\nclass DeclarativeUIActions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.formatActions = this.formatActions.bind(this);\n        this.state = {\n            actions: []\n        }\n    }\n\n    compareIcon(icon) {\n        const icons = {\n            \"circle-info-outline\": \"info-circle\",\n            \"magnifying-glass-outline\": \"search\"\n        }\n\n        return icons[icon];\n    }\n\n    formatActions(props) {\n        const actions = props.declarativeUiActions;\n\n        const formattedActions = actions.map(({actionDispatch, assignmentId, icon, requiresValue, tooltip}) => {\n            return {\n                actionDispatch: actionDispatch,\n                icon: this.compareIcon(icon),\n                id: assignmentId,\n                requiresValue,\n                tooltip\n            }\n        });\n\n        if (!_.isEqual(formattedActions, this.state.actions)) {\n            this.setState({\n                actions: formattedActions\n            })\n        }\n\n    }\n\n    render() {\n        this.formatActions(this.props)\n        const {actions} = this.state;\n\n        return actions.map(action => (\n            <div\n                key={action.id}\n                title={action.tooltip}\n                className={\n                    classNames({\n                        \"action\": true,\n                        \"visible\": !action.requiresValue || this.props.record.sysId\n                    })\n                }><Icon icon={action.icon}/></div>\n        ))\n    }\n\n}\n\n\nDeclarativeUIActions.propTypes = {\n    declarativeUiActions: propTypes.array,\n    record: propTypes.object.required\n}\n\nexport default DeclarativeUIActions;"],"file":"DeclarativeUIActions.js"}