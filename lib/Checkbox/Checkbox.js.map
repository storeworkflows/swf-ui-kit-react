{"version":3,"sources":["../../src/Checkbox/Checkbox.js"],"names":["Checkbox","props","onChangeAction","bind","onInvalidAction","state","checkedValue","checked","invalidValue","invalid","manageChecked","onChange","currentValue","value","setState","manageInvalid","onInvalid","disabled","label","name","readonly","required","isIndeterminate","styles","e","React","Component","defaultProps","propTypes","oneOfType","bool","oneOf","string","func"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport styles from \"./styles.scss\"\r\n\r\nclass Checkbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeAction = this.onChangeAction.bind(this);\r\n        this.onInvalidAction = this.onInvalidAction.bind(this);\r\n\r\n        this.state = {\r\n            checkedValue: this.props.checked,\r\n            invalidValue:  this.props.invalid\r\n        }\r\n    }\r\n\r\n    onChangeAction(){\r\n        const {manageChecked, onChange} = this.props;\r\n        const currentValue = this.state.checkedValue;\r\n\r\n        if(manageChecked)\r\n            onChange({value: currentValue});\r\n        else\r\n            this.setState({ checkedValue: !currentValue })\r\n    }\r\n\r\n    onInvalidAction(){\r\n        const {manageInvalid, onInvalid} = this.props;\r\n        const currentValue = this.state.invalidValue;\r\n\r\n        if(manageInvalid)\r\n            onInvalid({value: currentValue});\r\n        else\r\n            this.setState({ invalidValue: !currentValue })\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const {checked, invalid, manageChecked, manageInvalid} = this.props;\r\n        const {invalidValue, checkedValue} = this.state;\r\n\r\n        if(manageChecked && checkedValue!== checked)\r\n            this.setState({checkedValue: checked});\r\n\r\n        if(manageInvalid && invalidValue!== invalid)\r\n            this.setState({invalidValue: invalid});\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            checked,\r\n            disabled,\r\n            label,\r\n            name,\r\n            readonly,\r\n            required\r\n        } = this.props;\r\n\r\n        let isIndeterminate = checked === \"indeterminate\";\r\n\r\n        return (\r\n            <>\r\n                <style type=\"text/css\">{styles}</style>\r\n                <div className={classnames({\r\n                    \"checkbox-container\": true,\r\n                    \"disabled\": disabled,\r\n                    \"readonly\": readonly,\r\n                    \"invalid\": this.state.invalidValue\r\n                })}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checkedValue}\r\n                        disabled={disabled}\r\n                        required={required}\r\n                        name={name}\r\n                        onInvalid={e => this.onInvalidAction(e)}\r\n                        onChange={e => this.onChangeAction(e)}\r\n                    />\r\n                    {label && <label>{label}</label>}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nCheckbox.defaultProps = {\r\n    checked: false,\r\n    disabled: false,\r\n    invalid: false,\r\n    manageChecked: false,\r\n    manageInvalid: false,\r\n    readonly: false,\r\n    required: false\r\n};\r\n\r\nCheckbox.propTypes = {\r\n    checked: propTypes.oneOfType([\r\n        propTypes.bool,\r\n        propTypes.oneOf([\"indeterminate\"])\r\n    ]),\r\n    disabled: propTypes.bool,\r\n    invalid: propTypes.bool,\r\n    label: propTypes.string,\r\n    manageChecked: propTypes.bool,\r\n    manageInvalid: propTypes.bool,\r\n    name: propTypes.string,\r\n    readonly: propTypes.bool,\r\n    required: propTypes.bool,\r\n    onInvalid: propTypes.func,\r\n    onChange: propTypes.func\r\n}\r\n\r\nexport default Checkbox"],"file":"Checkbox.js"}