{"version":3,"sources":["../../src/Checkbox/Checkbox.js"],"names":["Checkbox","props","checked","disabled","invalid","label","manageChecked","manageInvalid","name","readonly","required","value","styles","React","Component","defaultProps","propTypes","bool","string"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS,GAEnB;AAEI;AACA;AACA;AACA;AACH,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WAEA,kBAAS;AAAA,wBAaD,KAAKA,KAbJ;AAAA,UAGDC,OAHC,eAGDA,OAHC;AAAA,UAIDC,QAJC,eAIDA,QAJC;AAAA,UAKDC,OALC,eAKDA,OALC;AAAA,UAMDC,KANC,eAMDA,KANC;AAAA,UAODC,aAPC,eAODA,aAPC;AAAA,UAQDC,aARC,eAQDA,aARC;AAAA,UASDC,IATC,eASDA,IATC;AAAA,UAUDC,QAVC,eAUDA,QAVC;AAAA,UAWDC,QAXC,eAWDA,QAXC;AAAA,UAYDC,KAZC,eAYDA,KAZC;AAeL,0BACI;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,oBAAwBC;AAAxB;AADJ,QADJ;AAiBH;;;;EAtDkBC,KAAK,CAACC,S;;AAuD5B;AAEDd,QAAQ,CAACe,YAAT,GAAwB;AACvB;AACGZ,EAAAA,QAAQ,EAAE,KAFU;AAGpBC,EAAAA,OAAO,EAAE,KAHW;AAIpBE,EAAAA,aAAa,EAAE,KAJK;AAKpBC,EAAAA,aAAa,EAAE,KALK;AAMpBE,EAAAA,QAAQ,EAAE,KANU;AAOpBC,EAAAA,QAAQ,EAAE;AAPU,CAAxB;AAUAV,QAAQ,CAACgB,SAAT,GAAqB;AACjB;AACA;AACA;AACA;AACAb,EAAAA,QAAQ,EAAEa,sBAAUC,IALH;AAMjBb,EAAAA,OAAO,EAAEY,sBAAUC,IANF;AAOjBZ,EAAAA,KAAK,EAAEW,sBAAUE,MAPA;AAQjBZ,EAAAA,aAAa,EAAEU,sBAAUC,IARR;AASjBV,EAAAA,aAAa,EAAES,sBAAUC,IATR;AAUjBT,EAAAA,IAAI,EAAEQ,sBAAUE,MAVC;AAWjBT,EAAAA,QAAQ,EAAEO,sBAAUC,IAXH;AAYjBP,EAAAA,QAAQ,EAAEM,sBAAUC;AAZH,CAArB;eAeejB,Q","sourcesContent":["import * as React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport styles from \"./styles.scss\"\r\n\r\nclass Checkbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    //    this.optionClicked = this.optionClicked.bind(this) ;\r\n\r\n        // this.state = {\r\n        //     checkedValue: this.props.checked,\r\n        //     invalidValue:  this.props.invalid\r\n        // }\r\n    }\r\n\r\n    // optionClicked(option){\r\n    //\r\n    // }\r\n    //\r\n    //\r\n    // componentDidUpdate(){\r\n    //     // let currentValue = this.props.value;\r\n    //     // if(this.props.manageChecked && currentValue!== this.state.checkedValue)\r\n    //     //     this.setState({checkedValue: currentValue});\r\n    // }\r\n\r\n    render() {\r\n\r\n        const {\r\n            checked,\r\n            disabled,\r\n            invalid,\r\n            label,\r\n            manageChecked,\r\n            manageInvalid,\r\n            name,\r\n            readonly,\r\n            required,\r\n            value\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <style type=\"text/css\">{styles}</style>\r\n                {/*<div className={\"radio-buttons-container\"}>*/}\r\n                {/*    <input*/}\r\n                {/*        type=\"checkbox\"*/}\r\n                {/*        checked={checked}*/}\r\n                {/*        value={value}*/}\r\n                {/*        disabled={disabled}*/}\r\n                {/*        readOnly={readonly}*/}\r\n                {/*        required={required}*/}\r\n                {/*        name={name}*/}\r\n                {/*    />*/}\r\n                {/*    {label && <label>{label}</label>}*/}\r\n                {/*</div>*/}\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nCheckbox.defaultProps = {\r\n //   checked: false,\r\n    disabled: false,\r\n    invalid: false,\r\n    manageChecked: false,\r\n    manageInvalid: false,\r\n    readonly: false,\r\n    required: false\r\n};\r\n\r\nCheckbox.propTypes = {\r\n    // checked: propTypes.oneOfType([\r\n    //     propTypes.bool,\r\n    //     propTypes.oneOf([\"indeterminate\"])\r\n    // ]),\r\n    disabled: propTypes.bool,\r\n    invalid: propTypes.bool,\r\n    label: propTypes.string,\r\n    manageChecked: propTypes.bool,\r\n    manageInvalid: propTypes.bool,\r\n    name: propTypes.string,\r\n    readonly: propTypes.bool,\r\n    required: propTypes.bool\r\n}\r\n\r\nexport default Checkbox"],"file":"Checkbox.js"}