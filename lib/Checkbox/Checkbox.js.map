{"version":3,"sources":["../../src/Checkbox/Checkbox.js"],"names":["Checkbox","props","onChangeAction","bind","onInvalidAction","state","checkedValue","checked","invalidValue","invalid","e","console","log","setState","prevState","disabled","label","manageChecked","manageInvalid","name","readonly","required","isIndeterminate","styles","React","Component","defaultProps","propTypes","oneOfType","bool","oneOf","string"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport styles from \"./styles.scss\"\r\n\r\nclass Checkbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n       this.onChangeAction = this.onChangeAction.bind(this);\r\n       this.onInvalidAction = this.onInvalidAction.bind(this);\r\n\r\n        this.state = {\r\n            checkedValue: this.props.checked,\r\n            invalidValue:  this.props.invalid\r\n        }\r\n    }\r\n\r\n    onChangeAction(e){\r\n        console.log(e)\r\n        this.setState((prevState) => ({\r\n            checkedValue: !prevState.checkedValue\r\n        }))\r\n    }\r\n\r\n    onInvalidAction(e){\r\n        console.log(\"invalid\", e);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        // let currentValue = this.props.value;\r\n        // if(this.props.manageChecked && currentValue!== this.state.checkedValue)\r\n        //     this.setState({checkedValue: currentValue});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            checked,\r\n            disabled,\r\n            invalid,\r\n            label,\r\n            manageChecked,\r\n            manageInvalid,\r\n            name,\r\n            readonly,\r\n            required\r\n        } = this.props;\r\n\r\n        let isIndeterminate = checked === \"indeterminate\";\r\n\r\n        return (\r\n            <>\r\n                <style type=\"text/css\">{styles}</style>\r\n                <div className={\"radio-buttons-container\"}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checkedValue}\r\n                        disabled={disabled}\r\n                        readOnly={readonly}\r\n                        required={required}\r\n                        name={name}\r\n                        onInvalid={e => this.onInvalidAction(e)}\r\n                        onChange={e => this.onChangeAction(e)}\r\n                    />\r\n                    {label && <label>{label}</label>}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nCheckbox.defaultProps = {\r\n    checked: false,\r\n    disabled: false,\r\n    invalid: false,\r\n    manageChecked: false,\r\n    manageInvalid: false,\r\n    readonly: false,\r\n    required: false\r\n};\r\n\r\nCheckbox.propTypes = {\r\n    checked: propTypes.oneOfType([\r\n        propTypes.bool,\r\n        propTypes.oneOf([\"indeterminate\"])\r\n    ]),\r\n    disabled: propTypes.bool,\r\n    invalid: propTypes.bool,\r\n    label: propTypes.string,\r\n    manageChecked: propTypes.bool,\r\n    manageInvalid: propTypes.bool,\r\n    name: propTypes.string,\r\n    readonly: propTypes.bool,\r\n    required: propTypes.bool\r\n}\r\n\r\nexport default Checkbox"],"file":"Checkbox.js"}