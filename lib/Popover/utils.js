"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPopoverStyle = void 0;
var verticalAlignment = ["top", "center", "bottom"];
var horizontalAlignment = ["start", "center", "end"];

var calculatePosition = function calculatePosition(alignType, arrayType, startPosition) {
  var result = "0";
  if (alignType === arrayType[1]) result = "".concat(startPosition / 2, "px");else if (alignType === arrayType[2]) result = "".concat(startPosition, "px");
  return result;
};

var getArrowStyles = function getArrowStyles(position, contentDimensions) {
  var style = {};
  var borderStyle = "var(--popover-border-width) solid rgba(0, 0, 0, 0.3)";
  var targetPosition = position.target.split('-');
  var contentPosition = position.content.split('-');
  var hasArrow = true;

  if (targetPosition[0] === "top" && contentPosition[0] === "bottom") {
    //down
    style['--popover-arrow-border-right'] = borderStyle;
    style['--popover-arrow-border-bottom'] = borderStyle;
    style['--popover-arrow-top'] = contentDimensions.height + "px";
    style['--popover-arrow-left'] = calculatePosition(contentPosition[1], horizontalAlignment, contentDimensions.width);
  } else if (targetPosition[1] === "start" && contentPosition[1] === "end") {
    //right
    style['--popover-arrow-border-right'] = borderStyle;
    style['--popover-arrow-border-top'] = borderStyle;
    style['--popover-arrow-top'] = calculatePosition(contentPosition[0], verticalAlignment, contentDimensions.height);
    style['--popover-arrow-left'] = contentDimensions.width + "px";
  } else if (targetPosition[1] === "end" && contentPosition[1] === "start") {
    //left
    style['--popover-arrow-border-left'] = borderStyle;
    style['--popover-arrow-border-bottom'] = borderStyle;
    style['--popover-arrow-top'] = calculatePosition(contentPosition[0], verticalAlignment, contentDimensions.height);
    style['--popover-arrow-left'] = 0;
  } else if (targetPosition[0] === "bottom" && contentPosition[0] === "top") {
    //up
    style['--popover-arrow-border-left'] = borderStyle;
    style['--popover-arrow-border-top'] = borderStyle;
    style['--popover-arrow-top'] = 0;
    style['--popover-arrow-left'] = calculatePosition(contentPosition[1], horizontalAlignment, contentDimensions.width);
  } else hasArrow = false;

  return {
    hasArrow: hasArrow,
    style: style
  };
};

var getStyleByPosition = function getStyleByPosition(position, targetDimensions, contentDimensions, windowWidth) {
  var style = {};
  var targetPosition = position.target;
  var contentPosition = position.content;

  if (targetPosition) {
    var verticalAlign = targetPosition.split('-')[0];
    var horizontalAlign = targetPosition.split('-')[1];
    var targetWidth = targetDimensions.width;
    var targetHeight = targetDimensions.height;
    style.top = calculatePosition(verticalAlign, verticalAlignment, targetHeight);
    style.left = calculatePosition(horizontalAlign, horizontalAlignment, targetWidth);
  }

  var x, y;

  if (contentPosition) {
    var _verticalAlign = contentPosition.split('-')[0];
    var _horizontalAlign = contentPosition.split('-')[1];
    var contentWidth = contentDimensions.width;
    var contentHeight = contentDimensions.height;
    y = calculatePosition(_verticalAlign, verticalAlignment, -contentHeight);
    x = calculatePosition(_horizontalAlign, horizontalAlignment, -contentWidth);
    style.transform = "translate3d(".concat(x, ", ").concat(y, ", 0)");
  }

  var resultX = targetDimensions.x + parseInt(style.left.replace("px", '')) + parseInt(x.replace("px", ''));
  var resultY = targetDimensions.y + parseInt(style.top.replace("px", '')) + parseInt(y.replace("px", ''));
  var isXVisible = resultX > 0 && resultX + contentDimensions.width < windowWidth;
  var isYVisible = resultY > 0;
  var isVisible = isXVisible && isYVisible;
  console.log("visibility", isVisible);
  return {
    style: style,
    isVisible: isVisible
  };
};

var getPopoverStyle = function getPopoverStyle(positions, targetDimensions, contentDimensions, windowWidth) {
  var style = {};
  var result;
  var arrowStyles;

  for (var i = 0; i < positions.length; i++) {
    result = getStyleByPosition(positions[i], targetDimensions, contentDimensions, windowWidth);

    if (result.isVisible) {
      style = result.style;
      arrowStyles = getArrowStyles(positions[i], contentDimensions);
      break;
    } else if (i === positions.length - 1) {
      style = getStyleByPosition(positions[0], targetDimensions, contentDimensions, windowWidth).style;
      arrowStyles = getArrowStyles(positions[0], contentDimensions);
    }
  }

  return {
    style: style,
    hasArrow: arrowStyles.has,
    arrowStyle: arrowStyles.style
  };
};

exports.getPopoverStyle = getPopoverStyle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Qb3BvdmVyL3V0aWxzLmpzIl0sIm5hbWVzIjpbInZlcnRpY2FsQWxpZ25tZW50IiwiaG9yaXpvbnRhbEFsaWdubWVudCIsImNhbGN1bGF0ZVBvc2l0aW9uIiwiYWxpZ25UeXBlIiwiYXJyYXlUeXBlIiwic3RhcnRQb3NpdGlvbiIsInJlc3VsdCIsImdldEFycm93U3R5bGVzIiwicG9zaXRpb24iLCJjb250ZW50RGltZW5zaW9ucyIsInN0eWxlIiwiYm9yZGVyU3R5bGUiLCJ0YXJnZXRQb3NpdGlvbiIsInRhcmdldCIsInNwbGl0IiwiY29udGVudFBvc2l0aW9uIiwiY29udGVudCIsImhhc0Fycm93IiwiaGVpZ2h0Iiwid2lkdGgiLCJnZXRTdHlsZUJ5UG9zaXRpb24iLCJ0YXJnZXREaW1lbnNpb25zIiwid2luZG93V2lkdGgiLCJ2ZXJ0aWNhbEFsaWduIiwiaG9yaXpvbnRhbEFsaWduIiwidGFyZ2V0V2lkdGgiLCJ0YXJnZXRIZWlnaHQiLCJ0b3AiLCJsZWZ0IiwieCIsInkiLCJjb250ZW50V2lkdGgiLCJjb250ZW50SGVpZ2h0IiwidHJhbnNmb3JtIiwicmVzdWx0WCIsInBhcnNlSW50IiwicmVwbGFjZSIsInJlc3VsdFkiLCJpc1hWaXNpYmxlIiwiaXNZVmlzaWJsZSIsImlzVmlzaWJsZSIsImNvbnNvbGUiLCJsb2ciLCJnZXRQb3BvdmVyU3R5bGUiLCJwb3NpdGlvbnMiLCJhcnJvd1N0eWxlcyIsImkiLCJsZW5ndGgiLCJoYXMiLCJhcnJvd1N0eWxlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxpQkFBaUIsR0FBRyxDQUFDLEtBQUQsRUFBUSxRQUFSLEVBQWtCLFFBQWxCLENBQTFCO0FBQ0EsSUFBTUMsbUJBQW1CLEdBQUcsQ0FBQyxPQUFELEVBQVUsUUFBVixFQUFvQixLQUFwQixDQUE1Qjs7QUFFQSxJQUFNQyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUF1QkMsYUFBdkIs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QkFBa0IsQ0FBQ3dCLFNBQVMsQ0FBQyxDQUFELENBQVYsRUFBZXZCLGdCQUFmLEVBQWlDWixpQkFBakMsRUFBb0RhLFdBQXBELENBQWxCLENBQW1GWixLQUEzRjtBQUNBbUMsTUFBQUEsV0FBVyxHQUFHdEMsY0FBYyxDQUFFcUMsU0FBUyxDQUFDLENBQUQsQ0FBWCxFQUFnQm5DLGlCQUFoQixDQUE1QjtBQUNIO0FBQ0o7O0FBR0QsU0FBTztBQUFDQyxJQUFBQSxLQUFLLEVBQUVBLEtBQVI7QUFBZU8sSUFBQUEsUUFBUSxFQUFFNEIsV0FBVyxDQUFDRyxHQUFyQztBQUEwQ0MsSUFBQUEsVUFBVSxFQUFFSixXQUFXLENBQUNuQztBQUFsRSxHQUFQO0FBQ0gsQ0FyQk0iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB2ZXJ0aWNhbEFsaWdubWVudCA9IFtcInRvcFwiLCBcImNlbnRlclwiLCBcImJvdHRvbVwiXTtcclxuY29uc3QgaG9yaXpvbnRhbEFsaWdubWVudCA9IFtcInN0YXJ0XCIsIFwiY2VudGVyXCIsIFwiZW5kXCJdO1xyXG5cclxuY29uc3QgY2FsY3VsYXRlUG9zaXRpb24gPSAoYWxpZ25UeXBlLCBhcnJheVR5cGUsIHN0YXJ0UG9zaXRpb24pID0+IHtcclxuICAgIGxldCByZXN1bHQgPSBcIjBcIjtcclxuICAgIGlmKGFsaWduVHlwZSA9PT0gYXJyYXlUeXBlWzFdKVxyXG4gICAgICAgIHJlc3VsdCA9IGAke3N0YXJ0UG9zaXRpb24vMn1weGA7XHJcbiAgICBlbHNlIGlmKGFsaWduVHlwZSA9PT0gYXJyYXlUeXBlWzJdKVxyXG4gICAgICAgIHJlc3VsdD0gYCR7c3RhcnRQb3NpdGlvbn1weGA7XHJcblxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxufVxyXG5cclxuY29uc3QgZ2V0QXJyb3dTdHlsZXMgPSAocG9zaXRpb24sIGNvbnRlbnREaW1lbnNpb25zKSA9PiB7XHJcbiAgICBsZXQgc3R5bGUgPSB7fTtcclxuICAgIGxldCBib3JkZXJTdHlsZSA9IGB2YXIoLS1wb3BvdmVyLWJvcmRlci13aWR0aCkgc29saWQgcmdiYSgwLCAwLCAwLCAwLjMpYDtcclxuICAgIGxldCB0YXJnZXRQb3NpdGlvbiA9IHBvc2l0aW9uLnRhcmdldC5zcGxpdCgnLScpO1xyXG4gICAgbGV0IGNvbnRlbnRQb3NpdGlvbiA9IHBvc2l0aW9uLmNvbnRlbnQuc3BsaXQoJy0nKTtcclxuXHJcbiAgICBsZXQgaGFzQXJyb3cgPSB0cnVlO1xyXG4gICAgaWYodGFyZ2V0UG9zaXRpb25bMF0gPT09IFwidG9wXCIgJiYgY29udGVudFBvc2l0aW9uWzBdID09PSBcImJvdHRvbVwiKXtcclxuICAgICAgICAvL2Rvd25cclxuICAgICAgICBzdHlsZVsnLS1wb3BvdmVyLWFycm93LWJvcmRlci1yaWdodCddID0gYm9yZGVyU3R5bGU7XHJcbiAgICAgICAgc3R5bGVbJy0tcG9wb3Zlci1hcnJvdy1ib3JkZXItYm90dG9tJ10gPSBib3JkZXJTdHlsZTtcclxuXHJcbiAgICAgICAgc3R5bGVbJy0tcG9wb3Zlci1hcnJvdy10b3AnXSA9IGNvbnRlbnREaW1lbnNpb25zLmhlaWdodCtcInB4XCI7XHJcbiAgICAgICAgc3R5bGVbJy0tcG9wb3Zlci1hcnJvdy1sZWZ0J10gPSBjYWxjdWxhdGVQb3NpdGlvbihjb250ZW50UG9zaXRpb25bMV0sIGhvcml6b250YWxBbGlnbm1lbnQsIGNvbnRlbnREaW1lbnNpb25zLndpZHRoKTtcclxuXHJcbiAgICB9IGVsc2UgaWYodGFyZ2V0UG9zaXRpb25bMV0gPT09IFwic3RhcnRcIiAmJiBjb250ZW50UG9zaXRpb25bMV0gPT09IFwiZW5kXCIpe1xyXG4gICAgICAgIC8vcmlnaHRcclxuICAgICAgICBzdHlsZVsnLS1wb3BvdmVyLWFycm93LWJvcmRlci1yaWdodCddID0gYm9yZGVyU3R5bGU7XHJcbiAgICAgICAgc3R5bGVbJy0tcG9wb3Zlci1hcnJvdy1ib3JkZXItdG9wJ10gPSBib3JkZXJTdHlsZTtcclxuXHJcbiAgICAgICAgc3R5bGVbJy0tcG9wb3Zlci1hcnJvdy10b3AnXSA9IGNhbGN1bGF0ZVBvc2l0aW9uKGNvbnRlbnRQb3NpdGlvblswXSwgdmVydGljYWxBbGlnbm1lbnQsIGNvbnRlbnREaW1lbnNpb25zLmhlaWdodCk7XHJcbiAgICAgICAgc3R5bGVbJy0tcG9wb3Zlci1hcnJvdy1sZWZ0J10gPSBjb250ZW50RGltZW5zaW9ucy53aWR0aCtcInB4XCI7XHJcblxyXG4gICAgfSBlbHNlIGlmKHRhcmdldFBvc2l0aW9uWzFdID09PSBcImVuZFwiICYmIGNvbnRlbnRQb3NpdGlvblsxXSA9PT0gXCJzdGFydFwiKXtcclxuICAgICAgICAvL2xlZnRcclxuICAgICAgICBzdHlsZVsnLS1wb3BvdmVyLWFycm93LWJvcmRlci1sZWZ0J10gPSBib3JkZXJTdHlsZTtcclxuICAgICAgICBzdHlsZVsnLS1wb3BvdmVyLWFycm93LWJvcmRlci1ib3R0b20nXSA9IGJvcmRlclN0eWxlXHJcblxyXG4gICAgICAgIHN0eWxlWyctLXBvcG92ZXItYXJyb3ctdG9wJ10gPSBjYWxjdWxhdGVQb3NpdGlvbihjb250ZW50UG9zaXRpb25bMF0sIHZlcnRpY2FsQWxpZ25tZW50LCBjb250ZW50RGltZW5zaW9ucy5oZWlnaHQpO1xyXG4gICAgICAgIHN0eWxlWyctLXBvcG92ZXItYXJyb3ctbGVmdCddID0gMDtcclxuXHJcbiAgICB9ICBlbHNlIGlmKHRhcmdldFBvc2l0aW9uWzBdID09PSBcImJvdHRvbVwiICYmIGNvbnRlbnRQb3NpdGlvblswXSA9PT0gXCJ0b3BcIil7XHJcbiAgICAgICAgLy91cFxyXG4gICAgICAgIHN0eWxlWyctLXBvcG92ZXItYXJyb3ctYm9yZGVyLWxlZnQnXSA9IGJvcmRlclN0eWxlO1xyXG4gICAgICAgIHN0eWxlWyctLXBvcG92ZXItYXJyb3ctYm9yZGVyLXRvcCddID0gYm9yZGVyU3R5bGVcclxuXHJcbiAgICAgICAgc3R5bGVbJy0tcG9wb3Zlci1hcnJvdy10b3AnXSA9IDA7XHJcbiAgICAgICAgc3R5bGVbJy0tcG9wb3Zlci1hcnJvdy1sZWZ0J10gPSBjYWxjdWxhdGVQb3NpdGlvbihjb250ZW50UG9zaXRpb25bMV0sIGhvcml6b250YWxBbGlnbm1lbnQsIGNvbnRlbnREaW1lbnNpb25zLndpZHRoKTtcclxuICAgIH0gZWxzZVxyXG4gICAgICAgIGhhc0Fycm93ID0gZmFsc2U7XHJcblxyXG4gICAgcmV0dXJuIHtoYXNBcnJvdzogaGFzQXJyb3csIHN0eWxlOiBzdHlsZX07XHJcbn1cclxuXHJcbmNvbnN0IGdldFN0eWxlQnlQb3NpdGlvbiA9IChwb3NpdGlvbiwgdGFyZ2V0RGltZW5zaW9ucywgY29udGVudERpbWVuc2lvbnMsIHdpbmRvd1dpZHRoKSA9PiB7XHJcbiAgICBsZXQgc3R5bGUgPSB7fTtcclxuICAgIGxldCB0YXJnZXRQb3NpdGlvbiA9IHBvc2l0aW9uLnRhcmdldDtcclxuICAgIGxldCBjb250ZW50UG9zaXRpb24gPSBwb3NpdGlvbi5jb250ZW50O1xyXG5cclxuICAgIGlmKHRhcmdldFBvc2l0aW9uKXtcclxuICAgICAgICBsZXQgdmVydGljYWxBbGlnbiA9IHRhcmdldFBvc2l0aW9uLnNwbGl0KCctJylbMF07XHJcbiAgICAgICAgbGV0IGhvcml6b250YWxBbGlnbiA9IHRhcmdldFBvc2l0aW9uLnNwbGl0KCctJylbMV07XHJcblxyXG4gICAgICAgIGxldCB0YXJnZXRXaWR0aCA9IHRhcmdldERpbWVuc2lvbnMud2lkdGg7XHJcbiAgICAgICAgbGV0IHRhcmdldEhlaWdodCA9IHRhcmdldERpbWVuc2lvbnMuaGVpZ2h0O1xyXG5cclxuICAgICAgICBzdHlsZS50b3AgPSBjYWxjdWxhdGVQb3NpdGlvbih2ZXJ0aWNhbEFsaWduLCB2ZXJ0aWNhbEFsaWdubWVudCwgdGFyZ2V0SGVpZ2h0KTtcclxuICAgICAgICBzdHlsZS5sZWZ0ID0gY2FsY3VsYXRlUG9zaXRpb24oaG9yaXpvbnRhbEFsaWduLCBob3Jpem9udGFsQWxpZ25tZW50LCB0YXJnZXRXaWR0aCk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHgsIHk7XHJcbiAgICBpZihjb250ZW50UG9zaXRpb24pe1xyXG4gICAgICAgIGxldCB2ZXJ0aWNhbEFsaWduID0gY29udGVudFBvc2l0aW9uLnNwbGl0KCctJylbMF07XHJcbiAgICAgICAgbGV0IGhvcml6b250YWxBbGlnbiA9IGNvbnRlbnRQb3NpdGlvbi5zcGxpdCgnLScpWzFdO1xyXG5cclxuICAgICAgICBsZXQgY29udGVudFdpZHRoID0gY29udGVudERpbWVuc2lvbnMud2lkdGg7XHJcbiAgICAgICAgbGV0IGNvbnRlbnRIZWlnaHQgPSBjb250ZW50RGltZW5zaW9ucy5oZWlnaHQ7XHJcblxyXG4gICAgICAgIHkgPSBjYWxjdWxhdGVQb3NpdGlvbih2ZXJ0aWNhbEFsaWduLCB2ZXJ0aWNhbEFsaWdubWVudCwgLWNvbnRlbnRIZWlnaHQpO1xyXG4gICAgICAgIHggPSBjYWxjdWxhdGVQb3NpdGlvbihob3Jpem9udGFsQWxpZ24sIGhvcml6b250YWxBbGlnbm1lbnQsIC1jb250ZW50V2lkdGgpO1xyXG5cclxuICAgICAgICBzdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlM2QoJHt4fSwgJHt5fSwgMClgO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCByZXN1bHRYID0gdGFyZ2V0RGltZW5zaW9ucy54ICtcclxuICAgICAgICBwYXJzZUludChzdHlsZS5sZWZ0LnJlcGxhY2UoXCJweFwiLCAnJykpICtcclxuICAgICAgICBwYXJzZUludCh4LnJlcGxhY2UoXCJweFwiLCAnJykpO1xyXG5cclxuICAgIGxldCByZXN1bHRZID0gdGFyZ2V0RGltZW5zaW9ucy55ICtcclxuICAgICAgICBwYXJzZUludChzdHlsZS50b3AucmVwbGFjZShcInB4XCIsICcnKSkgK1xyXG4gICAgICAgIHBhcnNlSW50KHkucmVwbGFjZShcInB4XCIsICcnKSk7XHJcblxyXG4gICAgbGV0IGlzWFZpc2libGUgPSByZXN1bHRYPjAgJiYgKHJlc3VsdFggKyBjb250ZW50RGltZW5zaW9ucy53aWR0aCkgPCB3aW5kb3dXaWR0aDtcclxuICAgIGxldCBpc1lWaXNpYmxlID0gcmVzdWx0WT4wO1xyXG5cclxuICAgIGxldCBpc1Zpc2libGUgPSBpc1hWaXNpYmxlICYmIGlzWVZpc2libGU7XHJcblxyXG4gICAgY29uc29sZS5sb2coXCJ2aXNpYmlsaXR5XCIsIGlzVmlzaWJsZSk7XHJcbiAgICByZXR1cm4ge3N0eWxlOiBzdHlsZSwgaXNWaXNpYmxlOiBpc1Zpc2libGV9O1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IGdldFBvcG92ZXJTdHlsZSA9IChwb3NpdGlvbnMsIHRhcmdldERpbWVuc2lvbnMsIGNvbnRlbnREaW1lbnNpb25zLCB3aW5kb3dXaWR0aCkgPT4ge1xyXG4gICAgbGV0IHN0eWxlID0ge307XHJcblxyXG4gICAgbGV0IHJlc3VsdDtcclxuICAgIGxldCBhcnJvd1N0eWxlcztcclxuICAgIGZvcihsZXQgaSA9IDA7IGk8cG9zaXRpb25zLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICByZXN1bHQgPSBnZXRTdHlsZUJ5UG9zaXRpb24ocG9zaXRpb25zW2ldLCB0YXJnZXREaW1lbnNpb25zLCBjb250ZW50RGltZW5zaW9ucywgd2luZG93V2lkdGgpO1xyXG4gICAgICAgIGlmKHJlc3VsdC5pc1Zpc2libGUpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzdHlsZSA9IHJlc3VsdC5zdHlsZTtcclxuICAgICAgICAgICAgYXJyb3dTdHlsZXMgPSBnZXRBcnJvd1N0eWxlcyAocG9zaXRpb25zW2ldLCBjb250ZW50RGltZW5zaW9ucyk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1lbHNlIGlmKGkgPT09IHBvc2l0aW9ucy5sZW5ndGggLTEpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzdHlsZSA9IGdldFN0eWxlQnlQb3NpdGlvbihwb3NpdGlvbnNbMF0sIHRhcmdldERpbWVuc2lvbnMsIGNvbnRlbnREaW1lbnNpb25zLCB3aW5kb3dXaWR0aCkuc3R5bGU7XHJcbiAgICAgICAgICAgIGFycm93U3R5bGVzID0gZ2V0QXJyb3dTdHlsZXMgKHBvc2l0aW9uc1swXSwgY29udGVudERpbWVuc2lvbnMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgcmV0dXJuIHtzdHlsZTogc3R5bGUsIGhhc0Fycm93OiBhcnJvd1N0eWxlcy5oYXMsIGFycm93U3R5bGU6IGFycm93U3R5bGVzLnN0eWxlfTtcclxufSJdfQ==