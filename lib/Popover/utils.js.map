{"version":3,"sources":["../../src/Popover/utils.js"],"names":["ALIGNMENT","POPOVER","ARROW_SIZE","ARROW_ALIGN","NO_ARROW_POSITIONS","ARROW_SIDES","ARROW_SPACE","verticalAlignment","TOP","CENTER","BOTTOM","horizontalAlignment","START","END","setArrowColor","align","setMargin","setArrowSize","hasArrowByPosition","position","roundBorder","isOneOfNoArrow","isCenterArrow","targetPosition","target","split","contentPosition","content","result","forEach","elTargetPosition","elContentPosition","isSameTargetParams","isSameContentParams","calculatePosition","alignType","arrayType","startPosition","addPx","Math","round","getArrowAlignment","parentSize","size","getArrowStyles","contentDimensions","style","margin","isDown","isLeft","isRight","isUp","hasArrow","sideToZero","colorSide","top","left","height","width","RIGHT","LEFT","getStyleByPosition","targetDimensions","windowParam","verticalAlign","horizontalAlign","targetWidth","targetHeight","addPxY","needMoveContent","needMoveContentY","y","x","translateX","translateY","contentWidth","contentHeight","transform","resultX","resultY","isXVisible","startX","endX","isYVisible","startY","endY","isVisible","maxHeight","maxWidth","getAllStyles","arrowStyles","popoverStyles","arrowStyle","isOuterPosition","targetVertical","targetHorizontal","contentVertical","contentHorizontal","getAllPossiblePositions","v","h","push","getAllPossibleVariants","allPositions","targetPos","contentPos","unshift","getPopoverStyle","positions","hideTail","i","length"],"mappings":";;;;;;;AAAA;;IACOA,S,GAAoFC,kB,CAApFD,S;IAAWE,U,GAAyED,kB,CAAzEC,U;IAAYC,W,GAA6DF,kB,CAA7DE,W;IAAaC,kB,GAAgDH,kB,CAAhDG,kB;IAAoBC,W,GAA4BJ,kB,CAA5BI,W;IAAaC,W,GAAeL,kB,CAAfK,W;AAE5E,IAAMC,iBAAiB,GAAG,CAACP,SAAS,CAACQ,GAAX,EAAgBR,SAAS,CAACS,MAA1B,EAAkCT,SAAS,CAACU,MAA5C,CAA1B;AACA,IAAMC,mBAAmB,GAAG,CAACX,SAAS,CAACY,KAAX,EAAkBZ,SAAS,CAACS,MAA5B,EAAoCT,SAAS,CAACa,GAA9C,CAA5B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,2BAAkBA,KAAlB;AACH,CAFD;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACD,KAAD,EAAW;AACzB,0BAAiBA,KAAjB;AACH,CAFD;;AAGA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACF,KAAD,EAAW;AAC5B,2BAAkBA,KAAlB;AACH,CAFD;;AAIA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAWC,WAAX,EAA0B;AACjD,SAAO,EAAEC,cAAc,CAACF,QAAD,CAAd,IAA6BC,WAAW,IAAI,CAACE,aAAa,CAACH,QAAD,CAA5D,CAAP;AACH,CAFD;;AAIA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACF,QAAD,EAAc;AACjC,MAAII,cAAc,GAAGJ,QAAQ,CAACK,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAArB;AACA,MAAIC,eAAe,GAAGP,QAAQ,CAACQ,OAAT,CAAiBF,KAAjB,CAAuB,GAAvB,CAAtB;AAEA,MAAIG,MAAM,GAAG,KAAb;AACAxB,EAAAA,kBAAkB,CAACyB,OAAnB,CAA4B,gBAAuB;AAAA,QAArBF,OAAqB,QAArBA,OAAqB;AAAA,QAAZH,MAAY,QAAZA,MAAY;AAC/C,QAAIM,gBAAgB,GAAGN,MAAM,CAACC,KAAP,CAAa,GAAb,CAAvB;AACA,QAAIM,iBAAiB,GAAGJ,OAAO,CAACF,KAAR,CAAc,GAAd,CAAxB;AACA,QAAIO,kBAAkB,GAAGT,cAAc,CAAC,CAAD,CAAd,KAAsBO,gBAAgB,CAAC,CAAD,CAAtC,IAA6CP,cAAc,CAAC,CAAD,CAAd,KAAsBO,gBAAgB,CAAC,CAAD,CAA5G;AACA,QAAIG,mBAAmB,GAAGP,eAAe,CAAC,CAAD,CAAf,KAAuBK,iBAAiB,CAAC,CAAD,CAAxC,IAA+CL,eAAe,CAAC,CAAD,CAAf,KAAuBK,iBAAiB,CAAC,CAAD,CAAjH;AAEA,QAAGC,kBAAkB,IAAIC,mBAAzB,EACIL,MAAM,GAAG,IAAT;AACP,GARD;AASA,SAAOA,MAAP;AACH,CAfD;;AAiBA,IAAMN,aAAa,GAAG,SAAhBA,aAAgB,CAACH,QAAD,EAAc;AAChC,MAAIO,eAAe,GAAGP,QAAQ,CAACQ,OAAT,CAAiBF,KAAjB,CAAuB,GAAvB,CAAtB;AACA,SAAOC,eAAe,CAAC,CAAD,CAAf,KAAuB1B,SAAS,CAACS,MAAjC,IAA2CiB,eAAe,CAAC,CAAD,CAAf,KAAuB1B,SAAS,CAACS,MAAnF;AACH,CAHD;;AAKA,IAAMyB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,aAAvB,EAAoD;AAAA,MAAdC,KAAc,uEAAN,CAAM;AAC1E,MAAIV,MAAM,GAAGU,KAAb;AACA,MAAGH,SAAS,KAAKC,SAAS,CAAC,CAAD,CAA1B,EACIR,MAAM,GAAGW,IAAI,CAACC,KAAL,CAAWH,aAAa,GAAC,CAAzB,IAA8BC,KAAvC,CADJ,KAEK,IAAGH,SAAS,KAAKC,SAAS,CAAC,CAAD,CAA1B,EACDR,MAAM,GAAGS,aAAa,GAAGC,KAAzB;AAEJ,SAAOV,MAAP;AACH,CARD;;AAWA,IAAMa,iBAAiB,GAAG,SAApBA,iBAAoB,CAACL,SAAD,EAAYrB,KAAZ,EAAmB2B,UAAnB,EAA+BC,IAA/B,EAAwC;AAC9D,MAAG5B,KAAK,KAAKqB,SAAS,CAAC,CAAD,CAAtB,EACI,OAAOG,IAAI,CAACC,KAAL,CAAWE,UAAU,GAAC,CAAtB,IAA2BC,IAAlC,CADJ,KAEK,IAAK5B,KAAK,KAAKqB,SAAS,CAAC,CAAD,CAAxB,EACD,OAAOM,UAAU,GAAGC,IAAI,GAAC,CAAzB,CADC,KAGD,OAAO,CAAP;AACP,CAPD;;AASA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACzB,QAAD,EAAW0B,iBAAX,EAAiC;AACpD,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIvB,cAAc,GAAGJ,QAAQ,CAACK,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAArB;AACA,MAAIC,eAAe,GAAGP,QAAQ,CAACQ,OAAT,CAAiBF,KAAjB,CAAuB,GAAvB,CAAtB;AACA,MAAIsB,MAAM,aAAM7C,UAAU,GAAGI,WAAnB,OAAV;AAEA,MAAI0C,MAAM,GAAGzB,cAAc,CAAC,CAAD,CAAd,KAAsBvB,SAAS,CAACQ,GAAhC,IAAuCkB,eAAe,CAAC,CAAD,CAAf,KAAuB1B,SAAS,CAACU,MAArF;AACA,MAAIuC,MAAM,GAAG1B,cAAc,CAAC,CAAD,CAAd,KAAsBvB,SAAS,CAACa,GAAhC,IAAuCa,eAAe,CAAC,CAAD,CAAf,KAAuB1B,SAAS,CAACY,KAArF;AACA,MAAIsC,OAAO,GAAG3B,cAAc,CAAC,CAAD,CAAd,KAAsBvB,SAAS,CAACY,KAAhC,IAAyCc,eAAe,CAAC,CAAD,CAAf,KAAuB1B,SAAS,CAACa,GAAxF;AACA,MAAIsC,IAAI,GAAG5B,cAAc,CAAC,CAAD,CAAd,KAAsBvB,SAAS,CAACU,MAAhC,IAA0CgB,eAAe,CAAC,CAAD,CAAf,KAAuB1B,SAAS,CAACQ,GAAtF;AAEA,MAAI4C,QAAQ,GAAG,IAAf;AACA,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,IAAI,GAAG,CAAX;;AAEA,UAAO,IAAP;AACI,SAAKR,MAAL;AACIK,MAAAA,UAAU,GAAGhD,WAAW,CAACK,MAAzB;AACA4C,MAAAA,SAAS,GAAGjD,WAAW,CAACG,GAAxB;AAEA+C,MAAAA,GAAG,GAAGV,iBAAiB,CAACY,MAAxB;AACAD,MAAAA,IAAI,GAAGf,iBAAiB,CAAC9B,mBAAD,EAAsBe,eAAe,CAAC,CAAD,CAArC,EAA0CmB,iBAAiB,CAACa,KAA5D,EAAmExD,UAAnE,CAAxB;AAEA;;AACJ,SAAKgD,OAAL;AACIG,MAAAA,UAAU,GAAGhD,WAAW,CAACsD,KAAzB;AACAL,MAAAA,SAAS,GAAGjD,WAAW,CAACuD,IAAxB;AAEAL,MAAAA,GAAG,GAAGd,iBAAiB,CAAClC,iBAAD,EAAoBmB,eAAe,CAAC,CAAD,CAAnC,EAAwCmB,iBAAiB,CAACY,MAA1D,EAAkEvD,UAAlE,CAAvB;AACAsD,MAAAA,IAAI,GAAGX,iBAAiB,CAACa,KAAzB;AAEA;;AACJ,SAAKT,MAAL;AACII,MAAAA,UAAU,GAAGhD,WAAW,CAACuD,IAAzB;AACAN,MAAAA,SAAS,GAAGjD,WAAW,CAACsD,KAAxB;AAEAJ,MAAAA,GAAG,GAAGd,iBAAiB,CAAClC,iBAAD,EAAoBmB,eAAe,CAAC,CAAD,CAAnC,EAAwCmB,iBAAiB,CAACY,MAA1D,EAAkEvD,UAAlE,CAAvB;AACAsD,MAAAA,IAAI,GAAG,CAACtD,UAAR;AAEA;;AACJ,SAAKiD,IAAL;AACIE,MAAAA,UAAU,GAAGhD,WAAW,CAACG,GAAzB;AACA8C,MAAAA,SAAS,GAAGjD,WAAW,CAACK,MAAxB;AAEA6C,MAAAA,GAAG,GAAG,CAACrD,UAAP;AACAsD,MAAAA,IAAI,GAAGf,iBAAiB,CAAC9B,mBAAD,EAAsBe,eAAe,CAAC,CAAD,CAArC,EAA0CmB,iBAAiB,CAACa,KAA5D,EAAmExD,UAAnE,CAAxB;AAEA;;AACJ;AACIkD,MAAAA,QAAQ,GAAG,KAAX;AACA;AAnCR;;AAsCA,MAAGA,QAAH,EAAY;AACRN,IAAAA,KAAK,CAAC3C,WAAW,CAACK,GAAb,CAAL,aAA4B+C,GAA5B;AACAT,IAAAA,KAAK,CAAC3C,WAAW,CAACyD,IAAb,CAAL,aAA6BJ,IAA7B;AAEAV,IAAAA,KAAK,CAAChC,aAAa,CAACwC,SAAD,CAAd,CAAL,GAAkC,2BAAlC;AACAR,IAAAA,KAAK,CAAC7B,YAAY,CAACoC,UAAD,CAAb,CAAL,GAAkC,CAAlC;AACAP,IAAAA,KAAK,CAAC9B,SAAS,CAACqC,UAAD,CAAV,CAAL,GAA+BN,MAA/B;AACH;;AACD,SAAO;AAACK,IAAAA,QAAQ,EAAEA,QAAX;AAAqBN,IAAAA,KAAK,EAAEA;AAA5B,GAAP;AACH,CAhED;;AAkEA,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAAC1C,QAAD,EAAW2C,gBAAX,EAA6BjB,iBAA7B,EAAgDkB,WAAhD,EAA6DX,QAA7D,EAA0E;AACjG,MAAIN,KAAK,GAAG,EAAZ;AACA,MAAIvB,cAAc,GAAGJ,QAAQ,CAACK,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAArB;AACA,MAAIC,eAAe,GAAGP,QAAQ,CAACQ,OAAT,CAAiBF,KAAjB,CAAuB,GAAvB,CAAtB;AAEA,MAAI8B,GAAG,GAAG,CAAV;AACA,MAAIC,IAAI,GAAG,CAAX;;AACA,MAAGjC,cAAH,EAAkB;AACd,QAAIyC,aAAa,GAAGzC,cAAc,CAAC,CAAD,CAAlC;AACA,QAAI0C,eAAe,GAAG1C,cAAc,CAAC,CAAD,CAApC;AAEA,QAAI2C,WAAW,GAAGJ,gBAAgB,CAACJ,KAAnC;AACA,QAAIS,YAAY,GAAGL,gBAAgB,CAACL,MAApC;AAEA,QAAInB,KAAK,GAAG,CAAZ;AACA,QAAI8B,MAAM,GAAG,CAAb;AAEA,QAAIC,eAAe,GAAGL,aAAa,KAAKhE,SAAS,CAACQ,GAA5B,IAAmCkB,eAAe,CAAC,CAAD,CAAf,KAAuB1B,SAAS,CAACU,MAA1F;AACA,QAAI4D,gBAAgB,GAAGL,eAAe,KAAKjE,SAAS,CAACY,KAA9B,IAAuCc,eAAe,CAAC,CAAD,CAAf,KAAuB1B,SAAS,CAACa,GAA/F;AAEA,QAAGwD,eAAe,IAAIjB,QAAtB,EACId,KAAK,GAAG,CAACpC,UAAD,GAAcI,WAAtB;AAEJ,QAAGgE,gBAAgB,IAAIlB,QAAvB,EACIgB,MAAM,GAAG,CAAClE,UAAD,GAAcI,WAAvB;AAEJiD,IAAAA,GAAG,GAAGO,gBAAgB,CAACS,CAAjB,GAAqB1B,iBAAiB,CAAC0B,CAAvC,GAA2CrC,iBAAiB,CAAC8B,aAAD,EAAgBzD,iBAAhB,EAAmC4D,YAAnC,EAAiD7B,KAAjD,CAAlE;AACAkB,IAAAA,IAAI,GAAGM,gBAAgB,CAACU,CAAjB,GAAqB3B,iBAAiB,CAAC2B,CAAvC,GAA2CtC,iBAAiB,CAAC+B,eAAD,EAAkBtD,mBAAlB,EAAuCuD,WAAvC,EAAoDE,MAApD,CAAnE;AAEAtB,IAAAA,KAAK,CAACS,GAAN,aAAeA,GAAf;AACAT,IAAAA,KAAK,CAACU,IAAN,aAAgBA,IAAhB;AACH;;AAED,MAAIiB,UAAJ,EAAgBC,UAAhB;;AACA,MAAGhD,eAAH,EAAmB;AACf,QAAIsC,cAAa,GAAGtC,eAAe,CAAC,CAAD,CAAnC;AACA,QAAIuC,gBAAe,GAAGvC,eAAe,CAAC,CAAD,CAArC;AAEA,QAAIiD,YAAY,GAAG9B,iBAAiB,CAACa,KAArC;AACA,QAAIkB,aAAa,GAAG/B,iBAAiB,CAACY,MAAtC;AAEAiB,IAAAA,UAAU,GAAGxC,iBAAiB,CAAC8B,cAAD,EAAgBzD,iBAAhB,EAAmC,CAACqE,aAApC,CAA9B;AACAH,IAAAA,UAAU,GAAGvC,iBAAiB,CAAC+B,gBAAD,EAAkBtD,mBAAlB,EAAuC,CAACgE,YAAxC,CAA9B;AAEA7B,IAAAA,KAAK,CAAC+B,SAAN,yBAAiCJ,UAAjC,iBAAkDC,UAAlD;AACH;;AAED,MAAII,OAAO,GAAGjC,iBAAiB,CAAC2B,CAAlB,GAAsBhB,IAAtB,GAA6BiB,UAA3C;AACA,MAAIM,OAAO,GAAGlC,iBAAiB,CAAC0B,CAAlB,GAAsBhB,GAAtB,GAA4BmB,UAA1C;AAEA,MAAIM,UAAU,GAAGF,OAAO,GAACf,WAAW,CAACkB,MAApB,IAA+BH,OAAO,GAAGjC,iBAAiB,CAACa,KAA7B,GAAsCK,WAAW,CAACmB,IAAjG;AACA,MAAIC,UAAU,GAAGJ,OAAO,GAAChB,WAAW,CAACqB,MAApB,IAA+BL,OAAO,GAAGlC,iBAAiB,CAACY,MAA7B,GAAuCM,WAAW,CAACsB,IAAlG;AAEA,MAAIC,SAAS,GAAGN,UAAU,IAAIG,UAA9B;AAEA,MAAIpC,MAAM,GAAIK,QAAD,GAAalD,UAAU,GAAGI,WAA1B,GAAwC,CAArD;AACA,MAAG,CAAC6E,UAAJ,EACIrC,KAAK,CAACyC,SAAN,aAAqBxB,WAAW,CAACsB,IAAZ,GAAmBN,OAAnB,GAA6BhC,MAAlD;AACJ,MAAG,CAACiC,UAAJ,EACIlC,KAAK,CAAC0C,QAAN,aAAoBzB,WAAW,CAACmB,IAAZ,GAAmBJ,OAAnB,GAA6B/B,MAAjD;AAEJ,SAAO;AAACD,IAAAA,KAAK,EAAEA,KAAR;AAAewC,IAAAA,SAAS,EAAEA;AAA1B,GAAP;AACH,CA9DD;;AAgEA,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACtE,QAAD,EAAW2C,gBAAX,EAA6BjB,iBAA7B,EAAgDkB,WAAhD,EAA6DX,QAA7D,EAA0E;AAC3F,MAAIsC,WAAW,GAAG;AAAEtC,IAAAA,QAAQ,EAAE,KAAZ;AAAmBN,IAAAA,KAAK,EAAC;AAAzB,GAAlB;AACA,MAAI6C,aAAa,GAAG9B,kBAAkB,CAAC1C,QAAD,EAAW2C,gBAAX,EAA6BjB,iBAA7B,EAAgDkB,WAAhD,EAA6DX,QAA7D,CAAtC;AAEA,MAAGA,QAAH,EACIsC,WAAW,GAAG9C,cAAc,CAACzB,QAAD,EAAW0B,iBAAX,CAA5B;AAEJ,SAAO;AAACyC,IAAAA,SAAS,EAAEK,aAAa,CAACL,SAA1B;AAAqCxC,IAAAA,KAAK,EAAE6C,aAAa,CAAC7C,KAA1D;AAAiEM,IAAAA,QAAQ,EAAEsC,WAAW,CAACtC,QAAvF;AAAiGwC,IAAAA,UAAU,EAAEF,WAAW,CAAC5C;AAAzH,GAAP;AACH,CARD;;AAUA,IAAM+C,eAAe,GAAG,SAAlBA,eAAkB,CAAC1E,QAAD,EAAc;AAClC,MAAII,cAAc,GAAGJ,QAAQ,CAACK,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAArB;AACA,MAAIC,eAAe,GAAGP,QAAQ,CAACQ,OAAT,CAAiBF,KAAjB,CAAuB,GAAvB,CAAtB;AAEA,MAAIqE,cAAc,GAAGvE,cAAc,CAAC,CAAD,CAAnC;AACA,MAAIwE,gBAAgB,GAAGxE,cAAc,CAAC,CAAD,CAArC;AAEA,MAAIyE,eAAe,GAAGtE,eAAe,CAAC,CAAD,CAArC;AACA,MAAIuE,iBAAiB,GAAGvE,eAAe,CAAC,CAAD,CAAvC;AAEA,MAAIsB,MAAM,GAAG8C,cAAc,KAAK9F,SAAS,CAACQ,GAA7B,IAAoCwF,eAAe,KAAKhG,SAAS,CAACU,MAA/E;AACA,MAAIuC,MAAM,GAAG8C,gBAAgB,KAAK/F,SAAS,CAACa,GAA/B,IAAsCoF,iBAAiB,KAAIjG,SAAS,CAACY,KAAlF;AACA,MAAIsC,OAAO,GAAG6C,gBAAgB,KAAK/F,SAAS,CAACY,KAA/B,IAAwCqF,iBAAiB,KAAKjG,SAAS,CAACa,GAAtF;AACA,MAAIsC,IAAI,GAAG2C,cAAc,KAAK9F,SAAS,CAACU,MAA7B,IAAuCsF,eAAe,KAAKhG,SAAS,CAACQ,GAAhF;AAEA,SAAOwC,MAAM,IAAIC,MAAV,IAAoBC,OAApB,IAA+BC,IAAtC;AACH,CAhBD;;AAkBA,IAAM+C,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAClC,MAAItE,MAAM,GAAG,EAAb;AAEArB,EAAAA,iBAAiB,CAACsB,OAAlB,CAA0B,UAACsE,CAAD,EAAO;AAC7BxF,IAAAA,mBAAmB,CAACkB,OAApB,CAA4B,UAAAuE,CAAC,EAAI;AAC7BxE,MAAAA,MAAM,CAACyE,IAAP,WAAeF,CAAf,cAAoBC,CAApB;AACH,KAFD;AAGH,GAJD;AAMA,SAAOxE,MAAP;AACH,CAVD;;AAaO,IAAM0E,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACxC,MAAI1E,MAAM,GAAG,EAAb;AAEA,MAAI2E,YAAY,GAAGL,uBAAuB,EAA1C;AACAK,EAAAA,YAAY,CAAC1E,OAAb,CAAqB,UAAC2E,SAAD,EAAe;AAChCD,IAAAA,YAAY,CAAC1E,OAAb,CAAqB,UAAA4E,UAAU,EAAI;AAC/B,UAAItF,QAAQ,GAAG;AAACK,QAAAA,MAAM,EAAEgF,SAAT;AAAoB7E,QAAAA,OAAO,EAAE8E;AAA7B,OAAf;AACA,UAAGZ,eAAe,CAAC1E,QAAD,CAAlB,EACIS,MAAM,CAAC8E,OAAP,CAAevF,QAAf,EADJ,KAGIS,MAAM,CAACyE,IAAP,CAAYlF,QAAZ;AACP,KAND;AAOH,GARD;AASA,SAAQS,MAAR;AACH,CAdM;;;;AAiBA,IAAM+E,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD,EAAY9C,gBAAZ,EAA8BjB,iBAA9B,EAAiDkB,WAAjD,EAA8D8C,QAA9D,EAAwEzF,WAAxE,EAAwF;AACnH,MAAIQ,MAAM,GAAG,EAAb;;AAEA,OAAI,IAAIkF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACF,SAAS,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACnC,QAAI1D,QAAQ,GAAG,CAACyD,QAAD,IAAa3F,kBAAkB,CAAC0F,SAAS,CAACE,CAAD,CAAV,EAAe1F,WAAf,CAA9C;AACAQ,IAAAA,MAAM,GAAG6D,YAAY,CAACmB,SAAS,CAACE,CAAD,CAAV,EAAehD,gBAAf,EAAiCjB,iBAAjC,EAAoDkB,WAApD,EAAiEX,QAAjE,CAArB;AACA,QAAGxB,MAAM,CAAC0D,SAAV,EACI,MADJ,KAEK,IAAGwB,CAAC,KAAKF,SAAS,CAACG,MAAV,GAAkB,CAA3B,EACDnF,MAAM,GAAG6D,YAAY,CAACmB,SAAS,CAAC,CAAD,CAAV,EAAe9C,gBAAf,EAAiCjB,iBAAjC,EAAoDkB,WAApD,EAAiEX,QAAjE,CAArB;AACP;;AAED,SAAOxB,MAAP;AACH,CAbM","sourcesContent":["import {POPOVER} from \"./constants\";\nconst {ALIGNMENT, ARROW_SIZE, ARROW_ALIGN, NO_ARROW_POSITIONS, ARROW_SIDES, ARROW_SPACE} = POPOVER\n\nconst verticalAlignment = [ALIGNMENT.TOP, ALIGNMENT.CENTER, ALIGNMENT.BOTTOM];\nconst horizontalAlignment = [ALIGNMENT.START, ALIGNMENT.CENTER, ALIGNMENT.END];\n\nconst setArrowColor = (align) => {\n    return `--arrow-${align}-color`;\n}\nconst setMargin = (align) => {\n    return `margin-${align}`;\n}\nconst setArrowSize = (align) => {\n    return `--arrow-${align}-size`;\n}\n\nconst hasArrowByPosition = (position, roundBorder) =>{\n    return !(isOneOfNoArrow(position) || (roundBorder && !isCenterArrow(position)));\n}\n\nconst isOneOfNoArrow = (position) => {\n    let targetPosition = position.target.split('-');\n    let contentPosition = position.content.split('-');\n\n    let result = false;\n    NO_ARROW_POSITIONS.forEach( ({content, target}) => {\n        let elTargetPosition = target.split('-');\n        let elContentPosition = content.split('-');\n        let isSameTargetParams = targetPosition[0] === elTargetPosition[0] && targetPosition[1] === elTargetPosition[1];\n        let isSameContentParams = contentPosition[0] === elContentPosition[0] && contentPosition[1] === elContentPosition[1];\n\n        if(isSameTargetParams && isSameContentParams)\n            result = true;\n    })\n    return result;\n}\n\nconst isCenterArrow = (position) => {\n    let contentPosition = position.content.split('-');\n    return contentPosition[0] === ALIGNMENT.CENTER || contentPosition[1] === ALIGNMENT.CENTER;\n}\n\nconst calculatePosition = (alignType, arrayType, startPosition, addPx = 0) => {\n    let result = addPx;\n    if(alignType === arrayType[1])\n        result = Math.round(startPosition/2) + addPx;\n    else if(alignType === arrayType[2])\n        result = startPosition + addPx;\n\n    return result;\n}\n\n\nconst getArrowAlignment = (arrayType, align, parentSize, size) => {\n    if(align === arrayType[1])\n        return Math.round(parentSize/2) - size;\n    else if ( align === arrayType[2])\n        return parentSize - size*2;\n    else\n        return 0;\n}\n\nconst getArrowStyles = (position, contentDimensions) => {\n    let style = {};\n    let targetPosition = position.target.split('-');\n    let contentPosition = position.content.split('-');\n    let margin = `${ARROW_SIZE + ARROW_SPACE}px`\n\n    let isDown = targetPosition[0] === ALIGNMENT.TOP && contentPosition[0] === ALIGNMENT.BOTTOM;\n    let isLeft = targetPosition[1] === ALIGNMENT.END && contentPosition[1] === ALIGNMENT.START;\n    let isRight = targetPosition[1] === ALIGNMENT.START && contentPosition[1] === ALIGNMENT.END;\n    let isUp = targetPosition[0] === ALIGNMENT.BOTTOM && contentPosition[0] === ALIGNMENT.TOP;\n\n    let hasArrow = true;\n    let sideToZero = null;\n    let colorSide = null;\n    let top = 0;\n    let left = 0;\n\n    switch(true){\n        case isDown :\n            sideToZero = ARROW_SIDES.BOTTOM;\n            colorSide = ARROW_SIDES.TOP;\n\n            top = contentDimensions.height;\n            left = getArrowAlignment(horizontalAlignment, contentPosition[1], contentDimensions.width, ARROW_SIZE);\n\n            break;\n        case isRight :\n            sideToZero = ARROW_SIDES.RIGHT;\n            colorSide = ARROW_SIDES.LEFT;\n\n            top = getArrowAlignment(verticalAlignment, contentPosition[0], contentDimensions.height, ARROW_SIZE);\n            left = contentDimensions.width;\n\n            break;\n        case isLeft:\n            sideToZero = ARROW_SIDES.LEFT;\n            colorSide = ARROW_SIDES.RIGHT;\n\n            top = getArrowAlignment(verticalAlignment, contentPosition[0], contentDimensions.height, ARROW_SIZE);\n            left = -ARROW_SIZE;\n\n            break;\n        case isUp:\n            sideToZero = ARROW_SIDES.TOP;\n            colorSide = ARROW_SIDES.BOTTOM;\n\n            top = -ARROW_SIZE;\n            left = getArrowAlignment(horizontalAlignment, contentPosition[1], contentDimensions.width, ARROW_SIZE);\n\n            break;\n        default:\n            hasArrow = false;\n            break;\n    }\n\n    if(hasArrow){\n        style[ARROW_ALIGN.TOP] = `${top}px`;\n        style[ARROW_ALIGN.LEFT] = `${left}px`;\n\n        style[setArrowColor(colorSide)] = 'var(--popover-background)';\n        style[setArrowSize(sideToZero)] = 0;\n        style[setMargin(sideToZero)] = margin;\n    }\n    return {hasArrow: hasArrow, style: style};\n}\n\nconst getStyleByPosition = (position, targetDimensions, contentDimensions, windowParam, hasArrow) => {\n    let style = {};\n    let targetPosition = position.target.split('-');\n    let contentPosition = position.content.split('-');\n\n    let top = 0;\n    let left = 0;\n    if(targetPosition){\n        let verticalAlign = targetPosition[0];\n        let horizontalAlign = targetPosition[1];\n\n        let targetWidth = targetDimensions.width;\n        let targetHeight = targetDimensions.height;\n\n        let addPx = 0;\n        let addPxY = 0\n\n        let needMoveContent = verticalAlign === ALIGNMENT.TOP && contentPosition[0] === ALIGNMENT.BOTTOM;\n        let needMoveContentY = horizontalAlign === ALIGNMENT.START && contentPosition[1] === ALIGNMENT.END;\n\n        if(needMoveContent && hasArrow)\n            addPx = -ARROW_SIZE - ARROW_SPACE;\n\n        if(needMoveContentY && hasArrow)\n            addPxY = -ARROW_SIZE - ARROW_SPACE;\n\n        top = targetDimensions.y - contentDimensions.y + calculatePosition(verticalAlign, verticalAlignment, targetHeight, addPx);\n        left = targetDimensions.x - contentDimensions.x + calculatePosition(horizontalAlign, horizontalAlignment, targetWidth, addPxY);\n\n        style.top = `${top}px`;\n        style.left = `${left}px`;\n    }\n\n    let translateX, translateY;\n    if(contentPosition){\n        let verticalAlign = contentPosition[0];\n        let horizontalAlign = contentPosition[1];\n\n        let contentWidth = contentDimensions.width;\n        let contentHeight = contentDimensions.height;\n\n        translateY = calculatePosition(verticalAlign, verticalAlignment, -contentHeight);\n        translateX = calculatePosition(horizontalAlign, horizontalAlignment, -contentWidth);\n\n        style.transform = `translate3d(${translateX}px, ${translateY}px, 0)`;\n    }\n\n    let resultX = contentDimensions.x + left + translateX;\n    let resultY = contentDimensions.y + top + translateY;\n\n    let isXVisible = resultX>windowParam.startX && (resultX + contentDimensions.width) < windowParam.endX;\n    let isYVisible = resultY>windowParam.startY && (resultY + contentDimensions.height) < windowParam.endY;\n\n    let isVisible = isXVisible && isYVisible;\n\n    let margin = (hasArrow) ? ARROW_SIZE + ARROW_SPACE : 0;\n    if(!isYVisible)\n        style.maxHeight = `${windowParam.endY - resultY - margin}px`;\n    if(!isXVisible)\n        style.maxWidth = `${windowParam.endX - resultX - margin}px`;\n\n    return {style: style, isVisible: isVisible};\n}\n\nconst getAllStyles = (position, targetDimensions, contentDimensions, windowParam, hasArrow) => {\n    let arrowStyles = { hasArrow: false, style:{}};\n    let popoverStyles = getStyleByPosition(position, targetDimensions, contentDimensions, windowParam, hasArrow);\n\n    if(hasArrow)\n        arrowStyles = getArrowStyles(position, contentDimensions);\n\n    return {isVisible: popoverStyles.isVisible, style: popoverStyles.style, hasArrow: arrowStyles.hasArrow, arrowStyle: arrowStyles.style};\n}\n\nconst isOuterPosition = (position) => {\n    let targetPosition = position.target.split('-');\n    let contentPosition = position.content.split('-');\n\n    let targetVertical = targetPosition[0];\n    let targetHorizontal = targetPosition[1];\n\n    let contentVertical = contentPosition[0];\n    let contentHorizontal = contentPosition[1];\n\n    let isDown = targetVertical === ALIGNMENT.TOP && contentVertical === ALIGNMENT.BOTTOM;\n    let isLeft = targetHorizontal === ALIGNMENT.END && contentHorizontal=== ALIGNMENT.START;\n    let isRight = targetHorizontal === ALIGNMENT.START && contentHorizontal === ALIGNMENT.END;\n    let isUp = targetVertical === ALIGNMENT.BOTTOM && contentVertical === ALIGNMENT.TOP;\n\n    return(isDown || isLeft || isRight || isUp)\n}\n\nconst getAllPossiblePositions = () => {\n    let result = []\n\n    verticalAlignment.forEach((v) => {\n        horizontalAlignment.forEach(h => {\n            result.push(`${v}-${h}`);\n        })\n    })\n\n    return result;\n}\n\n\nexport const getAllPossibleVariants = () => {\n    let result = [];\n\n    let allPositions = getAllPossiblePositions();\n    allPositions.forEach((targetPos) => {\n        allPositions.forEach(contentPos => {\n            let position = {target: targetPos, content: contentPos};\n            if(isOuterPosition(position))\n                result.unshift(position)\n            else\n                result.push(position)\n        })\n    })\n    return  result;\n}\n\n\nexport const getPopoverStyle = (positions, targetDimensions, contentDimensions, windowParam, hideTail, roundBorder) => {\n    let result = {};\n\n    for(let i = 0; i<positions.length; i++){\n        let hasArrow = !hideTail && hasArrowByPosition(positions[i], roundBorder);\n        result = getAllStyles(positions[i], targetDimensions, contentDimensions, windowParam, hasArrow);\n        if(result.isVisible)\n            break;\n        else if(i === positions.length -1)\n            result = getAllStyles(positions[0], targetDimensions, contentDimensions, windowParam, hasArrow);\n    }\n\n    return result;\n}\n\n\n\n"],"file":"utils.js"}