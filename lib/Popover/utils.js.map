{"version":3,"sources":["../../src/Popover/utils.js"],"names":["ALIGNMENT","POPOVER","ARROW_SIZE","ARROW_ALIGN","NO_ARROW_POSITIONS","ARROW_SIDES","ARROW_SPACE","verticalAlignment","TOP","CENTER","BOTTOM","horizontalAlignment","START","END","setArrowColor","align","setMargin","setArrowSize","hasArrowByPosition","position","roundBorder","isOneOfNoArrow","isCenterArrow","targetPosition","target","split","contentPosition","content","result","forEach","elTargetPosition","elContentPosition","isSameTargetParams","isSameContentParams","calculatePosition","alignType","arrayType","startPosition","addPx","Math","round","getArrowAlignment","parentSize","size","getArrowStyles","contentDimensions","style","margin","isDown","isLeft","isRight","isUp","hasArrow","sideToZero","colorSide","top","left","height","width","RIGHT","LEFT","getStyleByPosition","targetDimensions","windowWidth","verticalAlign","horizontalAlign","targetWidth","targetHeight","addPxY","needMoveContent","needMoveContentY","x","y","contentWidth","contentHeight","transform","resultX","parseInt","replace","resultY","isXVisible","isYVisible","isVisible","getAllStyles","arrowStyles","popoverStyles","arrowStyle","getAllPossiblePositions","v","h","push","getAllPossibleVariants","allPositions","targetPos","contentPos","getPopoverStyle","positions","hideTail","i","length"],"mappings":"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","sourcesContent":["import {POPOVER} from \"./constants\";\r\nconst {ALIGNMENT, ARROW_SIZE, ARROW_ALIGN, NO_ARROW_POSITIONS, ARROW_SIDES, ARROW_SPACE} = POPOVER\r\n\r\nconst verticalAlignment = [ALIGNMENT.TOP, ALIGNMENT.CENTER, ALIGNMENT.BOTTOM];\r\nconst horizontalAlignment = [ALIGNMENT.START, ALIGNMENT.CENTER, ALIGNMENT.END];\r\n\r\nconst setArrowColor = (align) => {\r\n    return `--arrow-${align}-color`;\r\n}\r\nconst setMargin = (align) => {\r\n    return `margin-${align}`;\r\n}\r\nconst setArrowSize = (align) => {\r\n    return `--arrow-${align}-size`;\r\n}\r\n\r\nconst hasArrowByPosition = (position, roundBorder) =>{\r\n    return !(isOneOfNoArrow(position) || (roundBorder && !isCenterArrow(position)));\r\n}\r\n\r\nconst isOneOfNoArrow = (position) => {\r\n    let targetPosition = position.target.split('-');\r\n    let contentPosition = position.content.split('-');\r\n\r\n    let result = false;\r\n    NO_ARROW_POSITIONS.forEach( ({content, target}) => {\r\n        let elTargetPosition = target.split('-');\r\n        let elContentPosition = content.split('-');\r\n        let isSameTargetParams = targetPosition[0] === elTargetPosition[0] && targetPosition[1] === elTargetPosition[1];\r\n        let isSameContentParams = contentPosition[0] === elContentPosition[0] && contentPosition[1] === elContentPosition[1];\r\n\r\n        if(isSameTargetParams && isSameContentParams)\r\n            result = true;\r\n    })\r\n    return result;\r\n}\r\n\r\nconst isCenterArrow = (position) => {\r\n    let contentPosition = position.content.split('-');\r\n    return contentPosition[0] === ALIGNMENT.CENTER || contentPosition[1] === ALIGNMENT.CENTER;\r\n}\r\n\r\nconst calculatePosition = (alignType, arrayType, startPosition, addPx = 0) => {\r\n    let result = `${addPx}px`;\r\n    if(alignType === arrayType[1])\r\n        result = `${Math.round(startPosition/2) + addPx}px`;\r\n    else if(alignType === arrayType[2])\r\n        result= `${startPosition + addPx}px`;\r\n\r\n    return result;\r\n}\r\n\r\n\r\nconst getArrowAlignment = (arrayType, align, parentSize, size) => {\r\n    if(align === arrayType[1])\r\n        return Math.round(parentSize/2) - size;\r\n    else if ( align === arrayType[2])\r\n        return parentSize - size*2;\r\n    else\r\n        return 0;\r\n}\r\n\r\nconst getArrowStyles = (position, contentDimensions) => {\r\n    let style = {};\r\n    let targetPosition = position.target.split('-');\r\n    let contentPosition = position.content.split('-');\r\n    let margin = `${ARROW_SIZE + ARROW_SPACE}px`\r\n\r\n    let isDown = targetPosition[0] === ALIGNMENT.TOP && contentPosition[0] === ALIGNMENT.BOTTOM;\r\n    let isLeft = targetPosition[1] === ALIGNMENT.END && contentPosition[1] === ALIGNMENT.START;\r\n    let isRight = targetPosition[1] === ALIGNMENT.START && contentPosition[1] === ALIGNMENT.END;\r\n    let isUp = targetPosition[0] === ALIGNMENT.BOTTOM && contentPosition[0] === ALIGNMENT.TOP;\r\n\r\n    let hasArrow = true;\r\n    let sideToZero = null;\r\n    let colorSide = null;\r\n    let top = 0;\r\n    let left = 0;\r\n\r\n    switch(true){\r\n        case isDown :\r\n            sideToZero = ARROW_SIDES.BOTTOM;\r\n            colorSide = ARROW_SIDES.TOP;\r\n\r\n            top = contentDimensions.height;\r\n            left = getArrowAlignment(horizontalAlignment, contentPosition[1], contentDimensions.width, ARROW_SIZE);\r\n\r\n            break;\r\n        case isRight :\r\n            sideToZero = ARROW_SIDES.RIGHT;\r\n            colorSide = ARROW_SIDES.LEFT;\r\n\r\n            top = getArrowAlignment(verticalAlignment, contentPosition[0], contentDimensions.height, ARROW_SIZE);\r\n            left = contentDimensions.width;\r\n\r\n            break;\r\n        case isLeft:\r\n            sideToZero = ARROW_SIDES.LEFT;\r\n            colorSide = ARROW_SIDES.RIGHT;\r\n\r\n            top = getArrowAlignment(verticalAlignment, contentPosition[0], contentDimensions.height, ARROW_SIZE);\r\n            left = -ARROW_SIZE;\r\n\r\n            break;\r\n        case isUp:\r\n            sideToZero = ARROW_SIDES.TOP;\r\n            colorSide = ARROW_SIDES.BOTTOM;\r\n\r\n            top = -ARROW_SIZE;\r\n            left = getArrowAlignment(horizontalAlignment, contentPosition[1], contentDimensions.width, ARROW_SIZE);\r\n\r\n            break;\r\n        default:\r\n            hasArrow = false;\r\n            break;\r\n    }\r\n\r\n    if(hasArrow){\r\n        style[ARROW_ALIGN.TOP] = `${top}px`;\r\n        style[ARROW_ALIGN.LEFT] = `${left}px`;\r\n\r\n        style[setArrowColor(colorSide)] = 'var(--popover-background)';\r\n        style[setArrowSize(sideToZero)] = 0;\r\n        style[setMargin(sideToZero)] = margin;\r\n    }\r\n    return {hasArrow: hasArrow, style: style};\r\n}\r\n\r\nconst getStyleByPosition = (position, targetDimensions, contentDimensions, windowWidth, hasArrow) => {\r\n    let style = {};\r\n    let targetPosition = position.target.split('-');\r\n    let contentPosition = position.content.split('-');\r\n\r\n    if(targetPosition){\r\n        let verticalAlign = targetPosition[0];\r\n        let horizontalAlign = targetPosition[1];\r\n\r\n        let targetWidth = targetDimensions.width;\r\n        let targetHeight = targetDimensions.height;\r\n\r\n        let addPx = 0;\r\n        let addPxY = 0\r\n\r\n        let needMoveContent = verticalAlign === ALIGNMENT.TOP && contentPosition[0] === ALIGNMENT.BOTTOM;\r\n        let needMoveContentY = horizontalAlign === ALIGNMENT.START && contentPosition[1] === ALIGNMENT.END;\r\n\r\n        if(needMoveContent && hasArrow)\r\n            addPx = -ARROW_SIZE - ARROW_SPACE;\r\n\r\n        if(needMoveContentY && hasArrow)\r\n            addPxY = -ARROW_SIZE - ARROW_SPACE;\r\n\r\n        style.top = calculatePosition(verticalAlign, verticalAlignment, targetHeight, addPx);\r\n        style.left = calculatePosition(horizontalAlign, horizontalAlignment, targetWidth, addPxY);\r\n\r\n    }\r\n\r\n    let x, y;\r\n    if(contentPosition){\r\n        let verticalAlign = contentPosition[0];\r\n        let horizontalAlign = contentPosition[1];\r\n\r\n        let contentWidth = contentDimensions.width;\r\n        let contentHeight = contentDimensions.height;\r\n\r\n        y = calculatePosition(verticalAlign, verticalAlignment, -contentHeight);\r\n        x = calculatePosition(horizontalAlign, horizontalAlignment, -contentWidth);\r\n\r\n        style.transform = `translate3d(${x}, ${y}, 0)`;\r\n    }\r\n\r\n    let resultX = targetDimensions.x +\r\n        parseInt(style.left.replace(\"px\", '')) +\r\n        parseInt(x.replace(\"px\", ''));\r\n\r\n    let resultY = targetDimensions.y +\r\n        parseInt(style.top.replace(\"px\", '')) +\r\n        parseInt(y.replace(\"px\", ''));\r\n\r\n    let isXVisible = resultX>0 && (resultX + contentDimensions.width) < windowWidth;\r\n    let isYVisible = resultY>0;\r\n\r\n    let isVisible = isXVisible && isYVisible;\r\n\r\n    return {style: style, isVisible: isVisible};\r\n}\r\n\r\nconst getAllStyles = (position, targetDimensions, contentDimensions, windowWidth, hasArrow) => {\r\n    let arrowStyles = { hasArrow: false, style:{}};\r\n    let popoverStyles = getStyleByPosition(position, targetDimensions, contentDimensions, windowWidth, hasArrow);\r\n    if(hasArrow && popoverStyles.isVisible)\r\n        arrowStyles = getArrowStyles(position, contentDimensions);\r\n\r\n    return {isVisible: popoverStyles.isVisible, style: popoverStyles.style, hasArrow: arrowStyles.hasArrow, arrowStyle: arrowStyles.style};\r\n}\r\n\r\nconst getAllPossiblePositions = () => {\r\n    let result = []\r\n\r\n    verticalAlignment.forEach((v) => {\r\n        horizontalAlignment.forEach(h => {\r\n            result.push(`${v}-${h}`);\r\n        })\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\n\r\nexport const getAllPossibleVariants = () => {\r\n    let result = [];\r\n\r\n    let allPositions = getAllPossiblePositions();\r\n    allPositions.forEach((targetPos) => {\r\n        allPositions.forEach(contentPos => {\r\n            result.push({target: targetPos, content: contentPos})\r\n        })\r\n    })\r\n    return  result;\r\n}\r\n\r\n\r\nexport const getPopoverStyle = (positions, targetDimensions, contentDimensions, windowWidth, hideTail, roundBorder) => {\r\n    let result = {};\r\n\r\n    for(let i = 0; i<positions.length; i++){\r\n        let hasArrow = !hideTail && hasArrowByPosition(positions[i], roundBorder);\r\n        result = getAllStyles(positions[i], targetDimensions, contentDimensions, windowWidth, hasArrow);\r\n        if(result.isVisible)\r\n            break;\r\n        else if(i === positions.length -1)\r\n            result = getAllStyles(positions[0], targetDimensions, contentDimensions, windowWidth, hasArrow);\r\n    }\r\n\r\n    return result;\r\n}"],"file":"utils.js"}