{"version":3,"sources":["../../src/Popover/Popover.js"],"names":["Popover","props","targetClicked","bind","updateOpenedState","state","opened","targetRef","React","createRef","contentRef","children","roundBorder","content","positionTarget","target","current","resetStyles","setStylesToContent","onclick","manageOpened","onClick","currentState","undefined","value","positions","hideTail","contentElement","targetDimensions","getBoundingClientRect","contentDimensions","windowParam","startY","startX","endY","window","innerHeight","endX","innerWidth","stylesInfo","styles","style","transform","left","top","visibility","maxHeight","maxWidth","console","log","hasArrow","Object","entries","arrowStyle","key","setProperty","openedValue","setState","renderContent","renderTarget","Component","Content","Target","defaultProps","propTypes","bool","oneOfType","func","shape","any","arrayOf","string"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB;AAEA,UAAKE,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAIA,UAAKC,SAAL,gBAAiBC,KAAK,CAACC,SAAN,EAAjB;AACA,UAAKC,UAAL,gBAAkBF,KAAK,CAACC,SAAN,EAAlB;AAVe;AAWlB;;;;WAED,yBAAgB;AAAA,wBACoB,KAAKR,KADzB;AAAA,UACLU,QADK,eACLA,QADK;AAAA,UACKC,WADL,eACKA,WADL;AAEZ,UAAMC,OAAO,GAAG,4BAAWF,QAAX,EAAqB,SAArB,CAAhB;AAEA,UAAI,CAACE,OAAL,EACI,OAAO,IAAP;AAEJ,0BAAO;AAAK,QAAA,SAAS,EAAE,4BAAW;AACtB,6BAAmB,IADG;AAEtB,2BAAiB,CAACD;AAFI,SAAX,CAAhB;AAIK,QAAA,GAAG,EAAE,KAAKF,UAJf;AAAA,+BAKH;AAAK,UAAA,SAAS,EAAE,wBAAhB;AAAA,oBAA2CG;AAA3C;AALG,QAAP;AAQH;;;WAED,wBAAe;AAAA,yBACwB,KAAKZ,KAD7B;AAAA,UACJU,QADI,gBACJA,QADI;AAAA,UACMG,cADN,gBACMA,cADN;AAEX,UAAMC,MAAM,GAAG,4BAAWJ,QAAX,EAAqB,QAArB,CAAf;;AAEA,UAAGG,cAAH,EAAkB;AACd,YAAG,KAAKP,SAAL,CAAeS,OAAf,KAA2B,IAA3B,IAAmC,KAAKT,SAAL,KAAiBO,cAAvD,EACA;AACI,eAAKP,SAAL,GAAiBO,cAAjB;;AACA,cAAG,KAAKJ,UAAL,IAAmB,KAAKA,UAAL,CAAgBM,OAAtC,EAA8C;AAC1C,iBAAKC,WAAL;AACA,gBAAG,KAAKZ,KAAL,CAAWC,MAAd,EACI,KAAKY,kBAAL;AACP;AACJ;;AAED,aAAKX,SAAL,CAAeS,OAAf,CAAuBG,OAAvB,GAAiC,KAAKjB,aAAtC;AACA,eAAO,IAAP;AACH;;AAED,UAAI,CAACa,MAAL,EACI,OAAO,IAAP;AAEJ,0BAAO;AAAK,QAAA,SAAS,EAAE,gBAAhB;AACK,QAAA,GAAG,EAAE,KAAKR,SADf;AAEK,QAAA,OAAO,EAAG,KAAKL,aAFpB;AAAA,kBAGUa;AAHV,QAAP;AAMH;;;WAED,yBAAgB;AAAA,yBACoB,KAAKd,KADzB;AAAA,UACLmB,YADK,gBACLA,YADK;AAAA,UACSC,OADT,gBACSA,OADT;AAEZ,UAAIC,YAAY,GAAG,KAAKjB,KAAL,CAAWC,MAA9B;;AACA,UAAG,CAACc,YAAJ,EAAkB;AACdE,QAAAA,YAAY,GAAG,CAACA,YAAhB;AACA,aAAKlB,iBAAL,CAAuBkB,YAAvB;AACH;;AAED,UAAGD,OAAO,KAAGE,SAAV,IAAuBF,OAAO,KAAG,IAApC,EACIA,OAAO,CAAC;AAACG,QAAAA,KAAK,EAAEF;AAAR,OAAD,CAAP;AACP;;;WAED,6BAAoB;AAChB,WAAKlB,iBAAL,CAAuB,KAAKH,KAAL,CAAWK,MAAlC;AACH;;;WAGD,8BAAqB;AACjB,UAAG,KAAKI,UAAL,IAAmB,KAAKA,UAAL,CAAgBM,OAAtC,EAA+C;AAAA,2BACA,KAAKf,KADL;AAAA,YACpCwB,SADoC,gBACpCA,SADoC;AAAA,YACzBC,QADyB,gBACzBA,QADyB;AAAA,YACfd,WADe,gBACfA,WADe;AAE3C,YAAIe,cAAc,GAAG,KAAKjB,UAAL,CAAgBM,OAArC;AAEA,YAAIY,gBAAgB,GAAG,KAAKrB,SAAL,CAAeS,OAAf,CAAuBa,qBAAvB,EAAvB;AACA,YAAIC,iBAAiB,GAAGH,cAAc,CAACE,qBAAf,EAAxB;AAEA,YAAIE,WAAW,GAAG;AACdC,UAAAA,MAAM,EAAE,CADM;AAEdC,UAAAA,MAAM,EAAE,CAFM;AAGdC,UAAAA,IAAI,EAAEC,MAAM,CAACC,WAHC;AAIdC,UAAAA,IAAI,EAAEF,MAAM,CAACG;AAJC,SAAlB;AAOA,YAAIC,UAAU,GAAG,4BAAgBd,SAAhB,EAA2BG,gBAA3B,EAA6CE,iBAA7C,EAAgEC,WAAhE,EAA6EL,QAA7E,EAAuFd,WAAvF,CAAjB;AACA,YAAI4B,OAAM,GAAGD,UAAU,CAACE,KAAxB;AAEAd,QAAAA,cAAc,CAACc,KAAf,CAAqBC,SAArB,GAAiCF,OAAM,CAACE,SAAxC;AACAf,QAAAA,cAAc,CAACc,KAAf,CAAqBE,IAArB,GAA4BH,OAAM,CAACG,IAAnC;AACAhB,QAAAA,cAAc,CAACc,KAAf,CAAqBG,GAArB,GAA2BJ,OAAM,CAACI,GAAlC;AACAjB,QAAAA,cAAc,CAACc,KAAf,CAAqBI,UAArB,GAAkC,SAAlC;AACA,YAAGL,OAAM,CAACM,SAAV,EACInB,cAAc,CAAChB,QAAf,CAAwB,CAAxB,EAA2B8B,KAA3B,CAAiCK,SAAjC,GAA4CN,OAAM,CAACM,SAAnD;AACJ,YAAGN,OAAM,CAACO,QAAV,EACIpB,cAAc,CAAChB,QAAf,CAAwB,CAAxB,EAA2B8B,KAA3B,CAAiCM,QAAjC,GAA4CP,OAAM,CAACO,QAAnD;AAEJC,QAAAA,OAAO,CAACC,GAAR,CAAatB,cAAc,CAAChB,QAAf,CAAwB,CAAxB,EAA2B8B,KAAxC;;AACA,YAAI,CAACf,QAAD,IAAaa,UAAU,CAACW,QAA5B,EAAsC;AAClC,6CAA2BC,MAAM,CAACC,OAAP,CAAeb,UAAU,CAACc,UAA1B,CAA3B;AAAA;AAAA,gBAAYC,GAAZ;AAAA,gBAAiB9B,KAAjB;;AACIG,YAAAA,cAAc,CAACc,KAAf,CAAqBc,WAArB,CAAiCD,GAAjC,EAAsC9B,KAAtC;AADJ;AAEH;AACJ;AACJ;;;WAED,uBAAa;AACT,UAAG,KAAKd,UAAL,IAAmB,KAAKA,UAAL,CAAgBM,OAAtC,EACA;AACI,YAAIW,cAAc,GAAG,KAAKjB,UAAL,CAAgBM,OAArC;AACAW,QAAAA,cAAc,CAACc,KAAf,CAAqBI,UAArB,GAAkC,QAAlC;AACAlB,QAAAA,cAAc,CAACc,KAAf,CAAqBC,SAArB,yBAAgD,CAAhD,UAAwD,CAAxD;AACAf,QAAAA,cAAc,CAACc,KAAf,CAAqBE,IAArB,GAA6B,CAA7B;AACAhB,QAAAA,cAAc,CAACc,KAAf,CAAqBG,GAArB,GAA2B,CAA3B;AACH;AACJ;;;WAGD,8BAAoB;AAChB,UAAIY,WAAW,GAAG,KAAKvD,KAAL,CAAWK,MAA7B;AACA,UAAG,KAAKL,KAAL,CAAWmB,YAAX,IAA2B,KAAKnB,KAAL,CAAWK,MAAX,KAAqB,KAAKD,KAAL,CAAWC,MAA9D,EACI,KAAKF,iBAAL,CAAuBoD,WAAvB;AACP;;;WAED,2BAAkBhC,KAAlB,EAAwB;AACpB,UAAGA,KAAH,EACI,KAAKN,kBAAL,GADJ,KAGI,KAAKD,WAAL;AAEJ,WAAKwC,QAAL,CAAc;AAACnD,QAAAA,MAAM,EAAEkB;AAAT,OAAd;AACH;;;WAGD,kBAAS;AACL,0BACI;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,oBAAwBgB;AAAxB,UADJ,EAEK,KAAKkB,aAAL,EAFL,EAGK,KAAKC,YAAL,EAHL;AAAA,QADJ;AAOH;;;;EArJiBnD,KAAK,CAACoD,S;;AAsJ3B;AAED5D,OAAO,CAAC6D,OAAR,GAAkB,oCAAmB,SAAnB,CAAlB;AACA7D,OAAO,CAAC8D,MAAR,GAAiB,oCAAmB,QAAnB,CAAjB;AAEA9D,OAAO,CAAC+D,YAAR,GAAuB;AACnBrC,EAAAA,QAAQ,EAAE,KADS;AAEnBN,EAAAA,YAAY,EAAE,KAFK;AAGnBd,EAAAA,MAAM,EAAE,KAHW;AAInBmB,EAAAA,SAAS,EAAE,oCAJQ;AAKnBb,EAAAA,WAAW,EAAE;AALM,CAAvB;AAQAZ,OAAO,CAACgE,SAAR,GAAoB;AAChBtC,EAAAA,QAAQ,EAAEsC,sBAAUC,IADJ;AAEhB7C,EAAAA,YAAY,EAAE4C,sBAAUC,IAFR;AAGhB3D,EAAAA,MAAM,EAAE0D,sBAAUC,IAHF;AAIhBnD,EAAAA,cAAc,EAAEkD,sBAAUE,SAAV,CAAoB,CAChCF,sBAAUG,IADsB,EAEhCH,sBAAUI,KAAV,CAAgB;AAAEpD,IAAAA,OAAO,EAAEgD,sBAAUK;AAArB,GAAhB,CAFgC,CAApB,CAJA;AAQhB5C,EAAAA,SAAS,EAAEuC,sBAAUM,OAAV,CAAkBN,sBAAUI,KAAV,CAAgB;AACzCrD,IAAAA,MAAM,EAAEiD,sBAAUO,MADuB;AAEzC1D,IAAAA,OAAO,EAAEmD,sBAAUO;AAFsB,GAAhB,CAAlB,CARK;AAYhBlD,EAAAA,OAAO,EAAE2C,sBAAUG,IAZH;AAahBvD,EAAAA,WAAW,EAAEoD,sBAAUC;AAbP,CAApB;eAgBejE,O","sourcesContent":["import * as React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nimport styles from \"./styles.scss\";\r\nimport findByType, {createSubComponent} from \"../utils/findByType\";\r\nimport {getAllPossibleVariants, getPopoverStyle} from \"./utils\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Popover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.targetClicked = this.targetClicked.bind(this);\r\n        this.updateOpenedState = this.updateOpenedState.bind(this);\r\n\r\n        this.state = {\r\n            opened: false\r\n        }\r\n\r\n        this.targetRef = React.createRef();\r\n        this.contentRef = React.createRef();\r\n    }\r\n\r\n    renderContent() {\r\n        const {children, roundBorder} = this.props;\r\n        const content = findByType(children, \"Content\");\r\n\r\n        if (!content)\r\n            return null;\r\n\r\n        return <div className={classnames({\r\n                    \"popover-content\": true,\r\n                    \"noRoundBorder\": !roundBorder\r\n                    })}\r\n                    ref={this.contentRef}>\r\n            <div className={\"popover-content-keeper\"}>{content}</div>\r\n            </div>;\r\n\r\n    }\r\n\r\n    renderTarget() {\r\n        const {children, positionTarget} = this.props;\r\n        const target = findByType(children, \"Target\");\r\n\r\n        if(positionTarget){\r\n            if(this.targetRef.current === null || this.targetRef!==positionTarget)\r\n            {\r\n                this.targetRef = positionTarget;\r\n                if(this.contentRef && this.contentRef.current){\r\n                    this.resetStyles();\r\n                    if(this.state.opened)\r\n                        this.setStylesToContent()\r\n                }\r\n            }\r\n\r\n            this.targetRef.current.onclick = this.targetClicked;\r\n            return null;\r\n        }\r\n\r\n        if (!target)\r\n            return null;\r\n\r\n        return <div className={\"popover-target\"}\r\n                    ref={this.targetRef}\r\n                    onClick={ this.targetClicked }>\r\n                        {target}\r\n                </div>\r\n\r\n    }\r\n\r\n    targetClicked (){\r\n        const {manageOpened, onClick} = this.props;\r\n        let currentState = this.state.opened;\r\n        if(!manageOpened) {\r\n            currentState = !currentState\r\n            this.updateOpenedState(currentState)\r\n        }\r\n\r\n        if(onClick!==undefined && onClick!==null)\r\n            onClick({value: currentState})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateOpenedState(this.props.opened)\r\n    }\r\n\r\n\r\n    setStylesToContent() {\r\n        if(this.contentRef && this.contentRef.current) {\r\n            const {positions, hideTail, roundBorder} = this.props;\r\n            let contentElement = this.contentRef.current;\r\n\r\n            let targetDimensions = this.targetRef.current.getBoundingClientRect()\r\n            let contentDimensions = contentElement.getBoundingClientRect();\r\n\r\n            let windowParam = {\r\n                startY: 0,\r\n                startX: 0,\r\n                endY: window.innerHeight,\r\n                endX: window.innerWidth\r\n            }\r\n\r\n            let stylesInfo = getPopoverStyle(positions, targetDimensions, contentDimensions, windowParam, hideTail, roundBorder);\r\n            let styles = stylesInfo.style;\r\n\r\n            contentElement.style.transform = styles.transform;\r\n            contentElement.style.left = styles.left;\r\n            contentElement.style.top = styles.top;\r\n            contentElement.style.visibility = \"visible\";\r\n            if(styles.maxHeight)\r\n                contentElement.children[0].style.maxHeight= styles.maxHeight;\r\n            if(styles.maxWidth)\r\n                contentElement.children[0].style.maxWidth = styles.maxWidth;\r\n\r\n            console.log( contentElement.children[0].style);\r\n            if (!hideTail && stylesInfo.hasArrow) {\r\n                for (const [key, value] of Object.entries(stylesInfo.arrowStyle))\r\n                    contentElement.style.setProperty(key, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    resetStyles(){\r\n        if(this.contentRef && this.contentRef.current)\r\n        {\r\n            let contentElement = this.contentRef.current;\r\n            contentElement.style.visibility = \"hidden\";\r\n            contentElement.style.transform = `translate3d(${0}px, ${0}px, 0)`\r\n            contentElement.style.left =  0;\r\n            contentElement.style.top = 0;\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate(){\r\n        let openedValue = this.props.opened;\r\n        if(this.props.manageOpened && this.props.opened!== this.state.opened)\r\n            this.updateOpenedState(openedValue)\r\n    }\r\n\r\n    updateOpenedState(value){\r\n        if(value)\r\n            this.setStylesToContent();\r\n        else\r\n            this.resetStyles();\r\n\r\n        this.setState({opened: value})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <style type=\"text/css\">{styles}</style>\r\n                {this.renderContent()}\r\n                {this.renderTarget()}\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nPopover.Content = createSubComponent(\"Content\");\r\nPopover.Target = createSubComponent(\"Target\");\r\n\r\nPopover.defaultProps = {\r\n    hideTail: false,\r\n    manageOpened: false,\r\n    opened: false,\r\n    positions: getAllPossibleVariants(),\r\n    roundBorder: true,\r\n}\r\n\r\nPopover.propTypes = {\r\n    hideTail: propTypes.bool,\r\n    manageOpened: propTypes.bool,\r\n    opened: propTypes.bool,\r\n    positionTarget: propTypes.oneOfType([\r\n        propTypes.func,\r\n        propTypes.shape({ current: propTypes.any })\r\n    ]),\r\n    positions: propTypes.arrayOf(propTypes.shape({\r\n        target: propTypes.string,\r\n        content: propTypes.string,\r\n    })),\r\n    onClick: propTypes.func,\r\n    roundBorder: propTypes.bool\r\n}\r\n\r\nexport default Popover"],"file":"Popover.js"}