{"version":3,"sources":["../../src/Popover/Popover.js"],"names":["Popover","props","targetClicked","bind","updateOpenedState","state","opened","targetRef","React","createRef","contentRef","children","roundBorder","content","positionTarget","target","current","resetStyles","setStylesToContent","onclick","manageOpened","onClick","currentState","undefined","value","positions","hideTail","contentElement","targetDimensions","getBoundingClientRect","contentDimensions","windowParam","startY","startX","endY","window","innerHeight","endX","innerWidth","stylesInfo","styles","style","transform","left","top","visibility","maxHeight","maxWidth","hasArrow","Object","entries","arrowStyle","key","setProperty","openedValue","setState","renderContent","renderTarget","Component","Content","Target","defaultProps","propTypes","bool","oneOfType","func","shape","any","arrayOf","string"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB;AAEA,UAAKE,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAIA,UAAKC,SAAL,gBAAiBC,KAAK,CAACC,SAAN,EAAjB;AACA,UAAKC,UAAL,gBAAkBF,KAAK,CAACC,SAAN,EAAlB;AAVe;AAWlB;;;;WAED,yBAAgB;AAAA,wBACoB,KAAKR,KADzB;AAAA,UACLU,QADK,eACLA,QADK;AAAA,UACKC,WADL,eACKA,WADL;AAEZ,UAAMC,OAAO,GAAG,4BAAWF,QAAX,EAAqB,SAArB,CAAhB;AAEA,UAAI,CAACE,OAAL,EACI,OAAO,IAAP;AAEJ,0BAAO;AAAK,QAAA,SAAS,EAAE,4BAAW;AACtB,6BAAmB,IADG;AAEtB,2BAAiB,CAACD;AAFI,SAAX,CAAhB;AAIK,QAAA,GAAG,EAAE,KAAKF,UAJf;AAAA,+BAKH;AAAK,UAAA,SAAS,EAAE,wBAAhB;AAAA,oBAA2CG;AAA3C;AALG,QAAP;AAQH;;;WAED,wBAAe;AAAA,yBACwB,KAAKZ,KAD7B;AAAA,UACJU,QADI,gBACJA,QADI;AAAA,UACMG,cADN,gBACMA,cADN;AAEX,UAAMC,MAAM,GAAG,4BAAWJ,QAAX,EAAqB,QAArB,CAAf;;AAEA,UAAGG,cAAH,EAAkB;AACd,YAAG,KAAKP,SAAL,CAAeS,OAAf,KAA2B,IAA3B,IAAmC,KAAKT,SAAL,KAAiBO,cAAvD,EACA;AACI,eAAKP,SAAL,GAAiBO,cAAjB;;AACA,cAAG,KAAKJ,UAAL,IAAmB,KAAKA,UAAL,CAAgBM,OAAtC,EAA8C;AAC1C,iBAAKC,WAAL;AACA,gBAAG,KAAKZ,KAAL,CAAWC,MAAd,EACI,KAAKY,kBAAL;AACP;AACJ;;AAED,aAAKX,SAAL,CAAeS,OAAf,CAAuBG,OAAvB,GAAiC,KAAKjB,aAAtC;AACA,eAAO,IAAP;AACH;;AAED,UAAI,CAACa,MAAL,EACI,OAAO,IAAP;AAEJ,0BAAO;AAAK,QAAA,SAAS,EAAE,gBAAhB;AACK,QAAA,GAAG,EAAE,KAAKR,SADf;AAEK,QAAA,OAAO,EAAG,KAAKL,aAFpB;AAAA,kBAGUa;AAHV,QAAP;AAMH;;;WAED,yBAAgB;AAAA,yBACoB,KAAKd,KADzB;AAAA,UACLmB,YADK,gBACLA,YADK;AAAA,UACSC,OADT,gBACSA,OADT;AAEZ,UAAIC,YAAY,GAAG,KAAKjB,KAAL,CAAWC,MAA9B;;AACA,UAAG,CAACc,YAAJ,EAAkB;AACdE,QAAAA,YAAY,GAAG,CAACA,YAAhB;AACA,aAAKlB,iBAAL,CAAuBkB,YAAvB;AACH;;AAED,UAAGD,OAAO,KAAGE,SAAV,IAAuBF,OAAO,KAAG,IAApC,EACIA,OAAO,CAAC;AAACG,QAAAA,KAAK,EAAEF;AAAR,OAAD,CAAP;AACP;;;WAED,6BAAoB;AAChB,WAAKlB,iBAAL,CAAuB,KAAKH,KAAL,CAAWK,MAAlC;AACH;;;WAGD,8BAAqB;AACjB,UAAG,KAAKI,UAAL,IAAmB,KAAKA,UAAL,CAAgBM,OAAtC,EAA+C;AAAA,2BACA,KAAKf,KADL;AAAA,YACpCwB,SADoC,gBACpCA,SADoC;AAAA,YACzBC,QADyB,gBACzBA,QADyB;AAAA,YACfd,WADe,gBACfA,WADe;AAE3C,YAAIe,cAAc,GAAG,KAAKjB,UAAL,CAAgBM,OAArC;AAEA,YAAIY,gBAAgB,GAAG,KAAKrB,SAAL,CAAeS,OAAf,CAAuBa,qBAAvB,EAAvB;AACA,YAAIC,iBAAiB,GAAGH,cAAc,CAACE,qBAAf,EAAxB;AAEA,YAAIE,WAAW,GAAG;AACdC,UAAAA,MAAM,EAAE,CADM;AAEdC,UAAAA,MAAM,EAAE,CAFM;AAGdC,UAAAA,IAAI,EAAEC,MAAM,CAACC,WAHC;AAIdC,UAAAA,IAAI,EAAEF,MAAM,CAACG;AAJC,SAAlB;AAOA,YAAIC,UAAU,GAAG,4BAAgBd,SAAhB,EAA2BG,gBAA3B,EAA6CE,iBAA7C,EAAgEC,WAAhE,EAA6EL,QAA7E,EAAuFd,WAAvF,CAAjB;AACA,YAAI4B,OAAM,GAAGD,UAAU,CAACE,KAAxB;AAEAd,QAAAA,cAAc,CAACc,KAAf,CAAqBC,SAArB,GAAiCF,OAAM,CAACE,SAAxC;AACAf,QAAAA,cAAc,CAACc,KAAf,CAAqBE,IAArB,GAA4BH,OAAM,CAACG,IAAnC;AACAhB,QAAAA,cAAc,CAACc,KAAf,CAAqBG,GAArB,GAA2BJ,OAAM,CAACI,GAAlC;AACAjB,QAAAA,cAAc,CAACc,KAAf,CAAqBI,UAArB,GAAkC,SAAlC;AACA,YAAGL,OAAM,CAACM,SAAV,EACInB,cAAc,CAAChB,QAAf,CAAwB,CAAxB,EAA2B8B,KAA3B,CAAiCK,SAAjC,GAA4CN,OAAM,CAACM,SAAnD;AACJ,YAAGN,OAAM,CAACO,QAAV,EACIpB,cAAc,CAAChB,QAAf,CAAwB,CAAxB,EAA2B8B,KAA3B,CAAiCM,QAAjC,GAA4CP,OAAM,CAACO,QAAnD;;AAEJ,YAAI,CAACrB,QAAD,IAAaa,UAAU,CAACS,QAA5B,EAAsC;AAClC,6CAA2BC,MAAM,CAACC,OAAP,CAAeX,UAAU,CAACY,UAA1B,CAA3B;AAAA;AAAA,gBAAYC,GAAZ;AAAA,gBAAiB5B,KAAjB;;AACIG,YAAAA,cAAc,CAACc,KAAf,CAAqBY,WAArB,CAAiCD,GAAjC,EAAsC5B,KAAtC;AADJ;AAEH;AACJ;AACJ;;;WAED,uBAAa;AACT,UAAG,KAAKd,UAAL,IAAmB,KAAKA,UAAL,CAAgBM,OAAtC,EACA;AACI,YAAIW,cAAc,GAAG,KAAKjB,UAAL,CAAgBM,OAArC;AACAW,QAAAA,cAAc,CAACc,KAAf,CAAqBI,UAArB,GAAkC,QAAlC;AACAlB,QAAAA,cAAc,CAACc,KAAf,CAAqBC,SAArB,yBAAgD,CAAhD,UAAwD,CAAxD;AACAf,QAAAA,cAAc,CAACc,KAAf,CAAqBE,IAArB,GAA6B,CAA7B;AACAhB,QAAAA,cAAc,CAACc,KAAf,CAAqBG,GAArB,GAA2B,CAA3B;AACH;AACJ;;;WAGD,8BAAoB;AAChB,UAAIU,WAAW,GAAG,KAAKrD,KAAL,CAAWK,MAA7B;AACA,UAAG,KAAKL,KAAL,CAAWmB,YAAX,IAA2B,KAAKnB,KAAL,CAAWK,MAAX,KAAqB,KAAKD,KAAL,CAAWC,MAA9D,EACI,KAAKF,iBAAL,CAAuBkD,WAAvB;AACP;;;WAED,2BAAkB9B,KAAlB,EAAwB;AACpB,UAAGA,KAAH,EACI,KAAKN,kBAAL,GADJ,KAGI,KAAKD,WAAL;AAEJ,WAAKsC,QAAL,CAAc;AAACjD,QAAAA,MAAM,EAAEkB;AAAT,OAAd;AACH;;;WAGD,kBAAS;AACL,0BACI;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAA,oBAAwBgB;AAAxB,UADJ,EAEK,KAAKgB,aAAL,EAFL,EAGK,KAAKC,YAAL,EAHL;AAAA,QADJ;AAOH;;;;EApJiBjD,KAAK,CAACkD,S;;AAqJ3B;AAED1D,OAAO,CAAC2D,OAAR,GAAkB,oCAAmB,SAAnB,CAAlB;AACA3D,OAAO,CAAC4D,MAAR,GAAiB,oCAAmB,QAAnB,CAAjB;AAEA5D,OAAO,CAAC6D,YAAR,GAAuB;AACnBnC,EAAAA,QAAQ,EAAE,KADS;AAEnBN,EAAAA,YAAY,EAAE,KAFK;AAGnBd,EAAAA,MAAM,EAAE,KAHW;AAInBmB,EAAAA,SAAS,EAAE,oCAJQ;AAKnBb,EAAAA,WAAW,EAAE;AALM,CAAvB;AAQAZ,OAAO,CAAC8D,SAAR,GAAoB;AAChBpC,EAAAA,QAAQ,EAAEoC,sBAAUC,IADJ;AAEhB3C,EAAAA,YAAY,EAAE0C,sBAAUC,IAFR;AAGhBzD,EAAAA,MAAM,EAAEwD,sBAAUC,IAHF;AAIhBjD,EAAAA,cAAc,EAAEgD,sBAAUE,SAAV,CAAoB,CAChCF,sBAAUG,IADsB,EAEhCH,sBAAUI,KAAV,CAAgB;AAAElD,IAAAA,OAAO,EAAE8C,sBAAUK;AAArB,GAAhB,CAFgC,CAApB,CAJA;AAQhB1C,EAAAA,SAAS,EAAEqC,sBAAUM,OAAV,CAAkBN,sBAAUI,KAAV,CAAgB;AACzCnD,IAAAA,MAAM,EAAE+C,sBAAUO,MADuB;AAEzCxD,IAAAA,OAAO,EAAEiD,sBAAUO;AAFsB,GAAhB,CAAlB,CARK;AAYhBhD,EAAAA,OAAO,EAAEyC,sBAAUG,IAZH;AAahBrD,EAAAA,WAAW,EAAEkD,sBAAUC;AAbP,CAApB;eAgBe/D,O","sourcesContent":["import * as React from \"react\";\nimport propTypes from \"prop-types\";\n\nimport styles from \"./styles.scss\";\nimport findByType, {createSubComponent} from \"../utils/findByType\";\nimport {getAllPossibleVariants, getPopoverStyle} from \"./utils\";\nimport classnames from \"classnames\";\n\nclass Popover extends React.Component {\n    constructor(props) {\n        super(props);\n        this.targetClicked = this.targetClicked.bind(this);\n        this.updateOpenedState = this.updateOpenedState.bind(this);\n\n        this.state = {\n            opened: false\n        }\n\n        this.targetRef = React.createRef();\n        this.contentRef = React.createRef();\n    }\n\n    renderContent() {\n        const {children, roundBorder} = this.props;\n        const content = findByType(children, \"Content\");\n\n        if (!content)\n            return null;\n\n        return <div className={classnames({\n                    \"popover-content\": true,\n                    \"noRoundBorder\": !roundBorder\n                    })}\n                    ref={this.contentRef}>\n            <div className={\"popover-content-keeper\"}>{content}</div>\n            </div>;\n\n    }\n\n    renderTarget() {\n        const {children, positionTarget} = this.props;\n        const target = findByType(children, \"Target\");\n\n        if(positionTarget){\n            if(this.targetRef.current === null || this.targetRef!==positionTarget)\n            {\n                this.targetRef = positionTarget;\n                if(this.contentRef && this.contentRef.current){\n                    this.resetStyles();\n                    if(this.state.opened)\n                        this.setStylesToContent()\n                }\n            }\n\n            this.targetRef.current.onclick = this.targetClicked;\n            return null;\n        }\n\n        if (!target)\n            return null;\n\n        return <div className={\"popover-target\"}\n                    ref={this.targetRef}\n                    onClick={ this.targetClicked }>\n                        {target}\n                </div>\n\n    }\n\n    targetClicked (){\n        const {manageOpened, onClick} = this.props;\n        let currentState = this.state.opened;\n        if(!manageOpened) {\n            currentState = !currentState\n            this.updateOpenedState(currentState)\n        }\n\n        if(onClick!==undefined && onClick!==null)\n            onClick({value: currentState})\n    }\n\n    componentDidMount() {\n        this.updateOpenedState(this.props.opened)\n    }\n\n\n    setStylesToContent() {\n        if(this.contentRef && this.contentRef.current) {\n            const {positions, hideTail, roundBorder} = this.props;\n            let contentElement = this.contentRef.current;\n\n            let targetDimensions = this.targetRef.current.getBoundingClientRect()\n            let contentDimensions = contentElement.getBoundingClientRect();\n\n            let windowParam = {\n                startY: 0,\n                startX: 0,\n                endY: window.innerHeight,\n                endX: window.innerWidth\n            }\n\n            let stylesInfo = getPopoverStyle(positions, targetDimensions, contentDimensions, windowParam, hideTail, roundBorder);\n            let styles = stylesInfo.style;\n\n            contentElement.style.transform = styles.transform;\n            contentElement.style.left = styles.left;\n            contentElement.style.top = styles.top;\n            contentElement.style.visibility = \"visible\";\n            if(styles.maxHeight)\n                contentElement.children[0].style.maxHeight= styles.maxHeight;\n            if(styles.maxWidth)\n                contentElement.children[0].style.maxWidth = styles.maxWidth;\n\n            if (!hideTail && stylesInfo.hasArrow) {\n                for (const [key, value] of Object.entries(stylesInfo.arrowStyle))\n                    contentElement.style.setProperty(key, value);\n            }\n        }\n    }\n\n    resetStyles(){\n        if(this.contentRef && this.contentRef.current)\n        {\n            let contentElement = this.contentRef.current;\n            contentElement.style.visibility = \"hidden\";\n            contentElement.style.transform = `translate3d(${0}px, ${0}px, 0)`\n            contentElement.style.left =  0;\n            contentElement.style.top = 0;\n        }\n    }\n\n\n    componentDidUpdate(){\n        let openedValue = this.props.opened;\n        if(this.props.manageOpened && this.props.opened!== this.state.opened)\n            this.updateOpenedState(openedValue)\n    }\n\n    updateOpenedState(value){\n        if(value)\n            this.setStylesToContent();\n        else\n            this.resetStyles();\n\n        this.setState({opened: value})\n    }\n\n\n    render() {\n        return (\n            <>\n                <style type=\"text/css\">{styles}</style>\n                {this.renderContent()}\n                {this.renderTarget()}\n            </>\n        );\n    }\n};\n\nPopover.Content = createSubComponent(\"Content\");\nPopover.Target = createSubComponent(\"Target\");\n\nPopover.defaultProps = {\n    hideTail: false,\n    manageOpened: false,\n    opened: false,\n    positions: getAllPossibleVariants(),\n    roundBorder: true,\n}\n\nPopover.propTypes = {\n    hideTail: propTypes.bool,\n    manageOpened: propTypes.bool,\n    opened: propTypes.bool,\n    positionTarget: propTypes.oneOfType([\n        propTypes.func,\n        propTypes.shape({ current: propTypes.any })\n    ]),\n    positions: propTypes.arrayOf(propTypes.shape({\n        target: propTypes.string,\n        content: propTypes.string,\n    })),\n    onClick: propTypes.func,\n    roundBorder: propTypes.bool\n}\n\nexport default Popover"],"file":"Popover.js"}